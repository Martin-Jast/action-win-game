<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArangoDBNetStandard</name>
    </assembly>
    <members>
        <member name="M:ArangoDBNetStandard.ApiClientBase.#ctor(ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.ApiClientBase"/> using
            the provided serialization layer.
            </summary>
            <param name="serialization"></param>
        </member>
        <member name="M:ArangoDBNetStandard.ApiClientBase.GetApiErrorException(ArangoDBNetStandard.Transport.IApiClientResponse)">
            <summary>
            Gets an <see cref="T:ArangoDBNetStandard.ApiErrorException"/> from the provided error response.
            </summary>
            <param name="response">The error response from ArangoDB.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.ApiClientBase.ValidateDocumentId(System.String)">
            <summary>
            Checks whether the provided document ID is in the correct form
            of "{collection}/{key}".
            </summary>
            <exception cref="T:System.ArgumentException">The document ID is invalid</exception>
            <param name="documentId">The document ID to validate.</param>
        </member>
        <member name="T:ArangoDBNetStandard.ApiErrorResponse">
            <summary>
            ArangoDB API error model
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ApiErrorResponse.Error">
            <summary>
            Whether this is an error response (always true).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ApiErrorResponse.ErrorMessage">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ApiErrorResponse.ErrorNum">
            <summary>
            ArangoDB error number.
            See https://www.arangodb.com/docs/stable/appendix-error-codes.html for error numbers and descriptions.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ApiErrorResponse.Code">
            <summary>
            HTTP status code.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient">
            <summary>
            A client to interact with ArangoDB HTTP API endpoints
            for AQL user functions management.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient._transport">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient._apiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="transport"></param>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="transport"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient.PostAqlFunctionAsync(ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionBody)">
            <summary>
            Create a new AQL user function.
            POST /_api/aqlfunction
            </summary>
            <param name="body">The body of the request containing required properties.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient.DeleteAqlFunctionAsync(System.String,ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionQuery)">
            <summary>
            Removes an existing AQL user function or function group, identified by name.
            DELETE /_api/aqlfunction/{name}
            </summary>
            <param name="name">The name of the function or function group (namespace).</param>
            <param name="query">The query parameters of the request.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.AqlFunctionApiClient.GetAqlFunctionsAsync(ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsQuery)">
            <summary>
            Get all registered AQL user functions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.IAqlFunctionApiClient">
            <summary>
            Defines a client to access the ArangoDB API for
            AQL User Functions Management.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.IAqlFunctionApiClient.PostAqlFunctionAsync(ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionBody)">
            <summary>
            Create a new AQL user function.
            POST /_api/aqlfunction
            </summary>
            <param name="body">The body of the request containing required properties.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.IAqlFunctionApiClient.DeleteAqlFunctionAsync(System.String,ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionQuery)">
            <summary>
            Removes an existing AQL user function or function group, identified by name.
            DELETE /_api/aqlfunction/{name}
            </summary>
            <param name="name">The name of the function or function group (namespace).</param>
            <param name="query">The query parameters of the request.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.AqlFunctionApi.IAqlFunctionApiClient.GetAqlFunctionsAsync(ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsQuery)">
            <summary>
            Get all registered AQL user functions.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.Models.AqlFunctionResult">
            <summary>
            Represents an AQL user function returned in a response results.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.AqlFunctionResult.Name">
            <summary>
            The fully qualified name of the user function.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.AqlFunctionResult.Code">
            <summary>
            A string representation of the function body.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.AqlFunctionResult.IsDeterministic">
            <summary>
            Whether the function results are fully deterministic
            (function return value solely depends on the input value
            and return value is the same for repeated calls with same input).
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionQuery">
            <summary>
            Represents query parameters used when deleting an AQL user function.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionQuery.Group">
            <summary>
            Whether the function name provided is treated as a namespace prefix.
            If set to true, all functions in the specified namespace will be deleted.
            The returned number of deleted functions may become 0 if none matches the string.
            If set to false, the function name provided must be fully qualified, including any namespaces.
            If none matches the name, HTTP 404 is returned.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionResponse">
            <summary>
            Represents a response containing the number of deleted AQL user functions.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionResponse.DeletedCount">
            <summary>
            The number of deleted user functions,
            always 1 when <see cref="P:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionQuery.Group"/> is set to false.
            Any number >= 0 when <see cref="P:ArangoDBNetStandard.AqlFunctionApi.Models.DeleteAqlFunctionQuery.Group"/> is set to true.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsQuery">
            <summary>
            Represents query parameters used when getting all AQL user functions.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsQuery.Namespace">
            <summary>
            Returns all registered AQL user functions from this namespace under result.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsResponse">
            <summary>
            Represents a response returned when getting all AQL user functions.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsResponse.Result">
            <summary>
            All functions, or the ones matching
            the <see cref="P:ArangoDBNetStandard.AqlFunctionApi.Models.GetAqlFunctionsQuery.Namespace"/> parameter.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionBody">
            <summary>
            Represents a request body to create a new AQL user function.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionBody.Name">
            <summary>
            The fully qualified name of the user function.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionBody.Code">
            <summary>
            A string representation of the function body.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionBody.IsDeterministic">
            <summary>
            An optional boolean value to indicate whether the function results
            are fully deterministic (function return value solely depends on
            the input value and return value is the same for repeated calls with same input).
            This attribute is currently not used
            but may be used later for optimizations.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionResponse">
            <summary>
            Represents a response returned when creating an AQL user function.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.AqlFunctionApi.Models.PostAqlFunctionResponse.IsNewlyCreated">
            <summary>
            Indicates whether the function was newly created.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.ArangoDBClient">
            <summary>
            Wrapper class providing access to the complete set of ArangoDB REST resources.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.ArangoDBClient._transport">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.AqlFunction">
            <summary>
            AQL user functions management API.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.Auth">
            <summary>
            Auth API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.Cursor">
            <summary>
            Cursor API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.Database">
            <summary>
            Database API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.Document">
            <summary>
            Document API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.Collection">
            <summary>
            Collection API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.Transaction">
            <summary>
            Transaction API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.Graph">
            <summary>
            Graph API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.ArangoDBClient.User">
            <summary>
            User management API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.ArangoDBClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.ArangoDBClient"/> from an existing
            <see cref="T:System.Net.Http.HttpClient"/> instance, using the default JSON serialization.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ArangoDBNetStandard.ArangoDBClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.ArangoDBClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="transport">The ArangoDB transport layer implementation.</param>
        </member>
        <member name="M:ArangoDBNetStandard.ArangoDBClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.ArangoDBClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="transport">The ArangoDB transport layer implementation.</param>
            <param name="serialization">The serialization layer implementation.</param>
        </member>
        <member name="M:ArangoDBNetStandard.ArangoDBClient.Dispose">
            <summary>
            Disposes the underlying transport instance.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.AuthApi.AuthApiClient">
            <summary>
            ArangoDB authentication endpoints.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.AuthApi.AuthApiClient._client">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.AuthApi.AuthApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.AuthApi.AuthApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ArangoDBNetStandard.AuthApi.AuthApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.AuthApi.AuthApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="client"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.AuthApi.AuthApiClient.GetJwtTokenAsync(System.String,System.String)">
            <summary>
            Gets a JSON Web Token generated by the ArangoDB server.
            </summary>
            <param name="username">The username of the user for whom to generate a JWT token.</param>
            <param name="password">The user's password.</param>
            <returns>Object containing the encoded JWT token value.</returns>
        </member>
        <member name="M:ArangoDBNetStandard.AuthApi.AuthApiClient.GetJwtTokenAsync(ArangoDBNetStandard.AuthApi.Models.JwtTokenRequestBody)">
            <summary>
            Gets a JSON Web Token generated by the ArangoDB server.
            </summary>
            <param name="body">Object containing username and password.</param>
            <returns>Object containing the encoded JWT token value.</returns>
        </member>
        <member name="T:ArangoDBNetStandard.AuthApi.IAuthApiClient">
            <summary>
            Defines a client to access the ArangoDB Authentication API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.AuthApi.IAuthApiClient.GetJwtTokenAsync(System.String,System.String)">
            <summary>
            Gets a JSON Web Token generated by the ArangoDB server.
            </summary>
            <param name="username">The username of the user for whom to generate a JWT token.</param>
            <param name="password">The user's password.</param>
            <returns>Object containing the encoded JWT token value.</returns>
        </member>
        <member name="M:ArangoDBNetStandard.AuthApi.IAuthApiClient.GetJwtTokenAsync(ArangoDBNetStandard.AuthApi.Models.JwtTokenRequestBody)">
            <summary>
            Gets a JSON Web Token generated by the ArangoDB server.
            </summary>
            <param name="body">Object containing username and password.</param>
            <returns>Object containing the encoded JWT token value.</returns>
        </member>
        <member name="P:ArangoDBNetStandard.AuthApi.Models.JwtTokenResponse.Jwt">
            <summary>
            JWT Token
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CollectionApi.CollectionApiClient">
            <summary>
            A client for interacting with ArangoDB Collections endpoints,
            implementing <see cref="T:ArangoDBNetStandard.CollectionApi.ICollectionApiClient"/>.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.CollectionApi.CollectionApiClient._transport">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.CollectionApi.CollectionApiClient._collectionApiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.CollectionApi.CollectionApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="transport"></param>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.CollectionApi.CollectionApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="transport"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.TruncateCollectionAsync(System.String)">
            <summary>
            Truncates a collection, i.e. removes all documents in the collection.
            PUT/_api/collection/{collection-name}/truncate
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.GetCollectionCountAsync(System.String)">
            <summary>
            Gets count of documents in a collection.
            GET/_api/collection/{collection-name}/count
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.GetCollectionsAsync(ArangoDBNetStandard.CollectionApi.Models.GetCollectionsQuery)">
            <summary>
            Get all collections.
            GET/_api/collection
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.GetCollectionAsync(System.String)">
            <summary>
            Return information about the requested collection.
            GET/_api/collection/{collection-name}
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <returns>
            The result is an object describing the collection.
            </returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.GetCollectionPropertiesAsync(System.String)">
            <summary>
            Read properties of a collection.
            GET /_api/collection/{collection-name}/properties
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.RenameCollectionAsync(System.String,ArangoDBNetStandard.CollectionApi.Models.RenameCollectionBody)">
            <summary>
            Rename a collection.
            PUT /_api/collection/{collection-name}/rename
            </summary>
            <param name="collectionName"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.GetCollectionRevisionAsync(System.String)">
            <summary>
            Get a revision of the collection. 
            GET /_api/collection/{collection-name}/revision
            </summary>
            <param name="collectionName">Name of the collection</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.PutCollectionPropertyAsync(System.String,ArangoDBNetStandard.CollectionApi.Models.PutCollectionPropertyBody)">
            <summary>
            Changes the properties of a collection
            PUT /_api/collection/{collection-name}/properties
            </summary>
            <param name="collectionName"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.CollectionApiClient.GetCollectionFiguresAsync(System.String)">
            <summary>
            Contains the number of documents and additional statistical information about the collection.
            GET/_api/collection/{collection-name}/figures
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.CollectionApi.ICollectionApiClient">
            <summary>
            Defines a client to access the ArangoDB Collections API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.TruncateCollectionAsync(System.String)">
            <summary>
            Truncates a collection, i.e. removes all documents in the collection.
            PUT/_api/collection/{collection-name}/truncate
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.GetCollectionCountAsync(System.String)">
            <summary>
            Gets count of documents in a collection.
            GET/_api/collection/{collection-name}/count
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.GetCollectionsAsync(ArangoDBNetStandard.CollectionApi.Models.GetCollectionsQuery)">
            <summary>
            Get all collections.
            GET/_api/collection
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.GetCollectionAsync(System.String)">
            <summary>
            Gets the requested collection.
            GET/_api/collection/{collection-name}
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.GetCollectionPropertiesAsync(System.String)">
            <summary>
            Read properties of a collection.
            GET /_api/collection/{collection-name}/properties
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.RenameCollectionAsync(System.String,ArangoDBNetStandard.CollectionApi.Models.RenameCollectionBody)">
            <summary>
            Rename a collection.
            PUT /_api/collection/{collection-name}/rename
            </summary>
            <param name="collectionName"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.GetCollectionRevisionAsync(System.String)">
            <summary>
            Get a revision of the collection. 
            GET /_api/collection/{collection-name}/revision
            </summary>
            <param name="collectionName">Name of the collection</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.PutCollectionPropertyAsync(System.String,ArangoDBNetStandard.CollectionApi.Models.PutCollectionPropertyBody)">
            <summary>
            Changes the properties of a collection
            PUT /_api/collection/{collection-name}/properties
            </summary>
            <param name="collectionName"></param>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.ICollectionApiClient.GetCollectionFiguresAsync(System.String)">
            <summary>
            Contains the number of documents and additional statistical information about the collection.
            GET/_api/collection/{collection-name}/figures
            </summary>
            <param name="collectionName"></param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.CollectionApi.Models.CollectionKeyOptions">
            <summary>
            Additional options for key generation of ArangoDB collections.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.CollectionKeyOptions.AllowUserKeys">
            <summary>
            If set to true, then it is allowed to supply own key values
            in the _key attribute of a document.
            If set to false, then the key generator will solely be responsible for generating keys
            and supplying own key values in the _key attribute of documents is considered an error.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.CollectionKeyOptions.Increment">
            <summary>
            Increment value for autoincrement key generator.
            Not used for other key generator types.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.CollectionKeyOptions.Offset">
            <summary>
            Initial offset value for autoincrement key generator.
            Not used for other key generator types.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.CollectionKeyOptions.Type">
            <summary>
            Apecifies the type of the key generator.
            The currently available generators are traditional, autoincrement, uuid and padded.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CollectionApi.Models.CollectionType">
            <summary>
            ArangoDB collection type.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.CollectionApi.Models.CollectionType.Document">
            <summary>
            Document collection type.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.CollectionApi.Models.CollectionType.Edge">
            <summary>
            Edge collection type.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.WaitForSync">
            <summary>
            If true then the data is synchronized to disk before returning
            from a document create, update, replace or removal operation.
            (default: false)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.DoCompact">
            <summary>
            Deprecated.
            Whether or not the collection is compacted.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.JournalSize">
            <summary>
            The maximal size of a journal or datafile in bytes.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.KeyOptions">
            <summary>
            Additional options for key generation.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.IsVolatile">
            <summary>
            Deprecated.
            If true then the collection data is kept in-memory only and not made persistent.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.NumberOfShards">
            <summary>
            In a cluster, this value determines the number of shards
            created for the collection. In a single server setup, this option is meaningless.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.ShardKeys">
            <summary>
            In a cluster, this attribute determines
            which document attributes are used to determine the target shard for documents.
            This option is meaningless in a single server setup.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.ReplicationFactor">
            <summary>
            In a cluster, this attribute determines how many copies
            of each shard are kept on different DB-Servers.
            (Enterprise Edition only)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.ShardingStrategy">
            <summary>
            This attribute specifies the name of the sharding strategy used for the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.IsSystem">
            <summary>
            If true then the collection data is kept in-memory only and not made persistent.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.Name">
            <summary>
            The name of the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionPropertiesResponse.Type">
            <summary>
            The type of the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionResponse.Type">
            <summary>
            The type of the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionResponse.IsSystem">
            <summary>
            If true then the collection is a system collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionResponse.Id">
            <summary>
            The identifier of the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionResponse.Name">
            <summary>
            The name of the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.GetCollectionResponse.Status">
            <summary>
            The status of the collection as number.
            </summary>
            <remarks>
            1: new born collection
            2: unloaded
            3: loaded
            4: in the process of being unloaded
            5: deleted
            6: loading
            ?: Every other status indicates a corrupted collection.
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.DistributeShardsLike">
            <summary>
            (The default is ""): in an enterprise cluster, this attribute binds the specifics
            of sharding for the newly created collection to follow that of a specified existing collection.
            Note: Using this parameter has consequences for the prototype collection.
            It can no longer be dropped, before sharding imitating collections are dropped.
            Equally, backups and restores of imitating collections alone will generate warnings,
            which can be overridden, about missing sharding prototype.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.DoCompact">
            <summary>
            Deprecated.
            Whether or not the collection will be compacted (default is true).
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.IndexBuckets">
            <summary>
            Deprecated.
            The number of buckets into which indexes using a hash table are split.
            The default is 16 and this number has to be a power of 2 and less than
            or equal to 1024.
            For very large collections one should increase this to avoid long pauses
            when the hash table has to be initially built or resized,
            since buckets are resized individually and can be initially built in parallel.
            For example, 64 might be a sensible value for a collection with 100 000 000 documents.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.IsSystem">
            <summary>
            If true, create a system collection.
            In this case collection-name should start with an underscore.
            (The default is false)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.IsVolatile">
            <summary>
            Deprecated.
            If true then the collection data is kept in-memory only and not made persistent.
            Unloading the collection will cause the collection data to be discarded.
            Stopping or re-starting the server will also cause full loss of data in the collection.
            Setting this option will make the resulting collection be slightly faster
            than regular collections because ArangoDB does not enforce any synchronization to disk
            and does not calculate any CRC checksums for datafiles (as there are no datafiles).
            This option should therefore be used for cache-type collections only,
            and not for data that cannot be re-created otherwise. (The default is false)
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.JournalSize">
            <summary>
            Deprecated.
            The maximal size of a journal or datafile in bytes.
            The value must be at least 1048576 (1 MiB).
            (The default is a configuration parameter)
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.KeyOptions">
            <summary>
            Additional options for key generation.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.Name">
            <summary>
            The name of the collection to create.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.NumberOfShards">
            <summary>
            (The default is 1): in a cluster, this value determines the number of shards
            to create for the collection. In a single server setup, this option is meaningless.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.ReplicationFactor">
            <summary>
            (The default is 1): in a cluster, this attribute determines how many copies
            of each shard are kept on different DB-Servers.
            The value 1 means that only one copy (no synchronous replication) is kept.
            A value of k means that k-1 replicas are kept.
            (Enterprise Edition only)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.ShardKeys">
            <summary>
            (The default is [“_key”]): in a cluster, this attribute determines
            which document attributes are used to determine the target shard for documents.
            Values of shard key attributes cannot be changed once set.
            This option is meaningless in a single server setup.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.ShardingStrategy">
            <summary>
            This attribute specifies the name of the sharding strategy to use for the collection.
            Since ArangoDB 3.4 there are different sharding strategies to select from
            when creating a new collection.
            The selected ShardingStrategy value will remain fixed for the collection
            and cannot be changed afterwards.
            </summary>
            <remarks>
            The available sharding strategies are:
            community-compat,
            enterprise-compat,
            enterprise-smart-edge-compat,
            hash,
            enterprise-hash-smart-edge.
            If no sharding strategy is specified,
            the default will be hash for all collections,
            and enterprise-hash-smart-edge for all smart edge collections
            (the latter requires the Enterprise Edition of ArangoDB).
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.SmartJoinAttribute">
            <summary>
            In an Enterprise Edition cluster,
            this attribute determines an attribute of the collection
            that must contain the shard key value of the referred-to SmartJoin collection.
            Additionally, the shard key for a document in this collection must contain
            the value of this attribute, followed by a colon,
            followed by the actual primary key of the document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.Type">
            <summary>
            The type of the collection to create.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionBody.WaitForSync">
            <summary>
            If true then the data is synchronized to disk before returning
            from a document create, update, replace or removal operation.
            (default: false)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionQuery.WaitForSyncReplication">
            <summary>
            Default is true which means the server will only report success back to the
            client if all replicas have created the collection. Set to false if you want
            faster server responses and don’t care about full replication.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionQuery.EnforceReplicationFactor">
            <summary>
            Default is true which means the server will check if there are enough replicas
            available at creation time and bail out otherwise. Set to false to disable
            this extra check.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.CollectionApi.Models.PostCollectionQuery.ToQueryString">
            <summary>
            Get the set of options in a format suited to a URL query string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.WaitForSync">
            <summary>
            If true then the data is synchronized to disk before returning
            from a document create, update, replace or removal operation.
            (default: false)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.Type">
            <summary>
            The type of the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.JournalSize">
            <summary>
            The maximal size of a journal or datafile in bytes.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.Name">
            <summary>
            The name of the collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.DoCompact">
            <summary>
            Deprecated.
            Whether or not the collection is compacted.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.IsSystem">
            <summary>
            If true then the collection data is kept in-memory only and not made persistent.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.IndexBuckets">
            <summary>
            Deprecated.
            The number of buckets into which indexes using a hash table are split.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CollectionApi.Models.PostCollectionResponse.IsVolatile">
            <summary>
            Deprecated.
            If true then the collection data is kept in-memory only and not made persistent.
            This option is meaningful for the MMFiles storage engine only.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.CursorApiClient">
            <summary>
            ArangoDB Cursor API.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.CursorApi.CursorApiClient._cursorApiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.CursorApi.CursorApiClient._client">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.CursorApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.CursorApi.CursorApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.CursorApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.CursorApi.CursorApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="client"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.CursorApiClient.PostCursorAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ArangoDBNetStandard.CursorApi.Models.PostCursorOptions,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int32})">
            <summary>
            Execute an AQL query, creating a cursor which can be used to page query results.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="bindVars"></param>
            <param name="options"></param>
            <param name="count"></param>
            <param name="batchSize"></param>
            <param name="cache"></param>
            <param name="memoryLimit"></param>
            <param name="ttl"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.CursorApiClient.PostCursorAsync``1(ArangoDBNetStandard.CursorApi.Models.PostCursorBody)">
            <summary>
            Execute an AQL query, creating a cursor which can be used to page query results.
            </summary>
            <param name="postCursorBody">Object encapsulating options and parameters of the query.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.CursorApiClient.DeleteCursorAsync(System.String)">
            <summary>
            Deletes an existing cursor and frees the resources associated with it.
            DELETE /_api/cursor/{cursor-identifier}
            </summary>
            <param name="cursorId">The id of the cursor to delete.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.CursorApiClient.PutCursorAsync``1(System.String)">
            <summary>
            Advances an existing query cursor and gets the next set of results.
            </summary>
            <typeparam name="T">Result type to deserialize to</typeparam>
            <param name="cursorId">ID of the existing query cursor.</param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.ICursorApiClient">
            <summary>
            Defines a client to access the ArangoDB Cursor API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.ICursorApiClient.PostCursorAsync``1(System.String,System.Collections.Generic.Dictionary{System.String,System.Object},ArangoDBNetStandard.CursorApi.Models.PostCursorOptions,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.Int32})">
            <summary>
            Execute an AQL query, creating a cursor which can be used to page query results.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="bindVars"></param>
            <param name="options"></param>
            <param name="count"></param>
            <param name="batchSize"></param>
            <param name="cache"></param>
            <param name="memoryLimit"></param>
            <param name="ttl"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.ICursorApiClient.PostCursorAsync``1(ArangoDBNetStandard.CursorApi.Models.PostCursorBody)">
            <summary>
            Execute an AQL query, creating a cursor which can be used to page query results.
            </summary>
            <param name="postCursorBody">Object encapsulating options and parameters of the query.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.ICursorApiClient.DeleteCursorAsync(System.String)">
            <summary>
            Deletes an existing cursor and frees the resources associated with it.
            DELETE /_api/cursor/{cursor-identifier}
            </summary>
            <param name="cursorId">The id of the cursor to delete.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.CursorApi.ICursorApiClient.PutCursorAsync``1(System.String)">
            <summary>
            Advances an existing query cursor and gets the next set of results.
            </summary>
            <typeparam name="T">Result type to deserialize to</typeparam>
            <param name="cursorId">ID of the existing query cursor.</param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1">
            <summary>
            Response from ArangoDB when creating a new cursor.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Error">
            <summary>
            A flag to indicate that an error occurred (false in this case)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Count">
            <summary>
            the total number of result documents available
            (only available if the query was executed with the count attribute set)
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Code">
            <summary>
            The HTTP status code
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Extra">
            <summary>
            Optional object with extra information about the query result contained
            in its <see cref="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseExtra.Stats"/> sub-attribute.
            For data-modification queries, the sub-attribute will contain the number of
            modified documents and the number of documents that could not be modified
            due to an error (if ignoreErrors query option is specified).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Cached">
            <summary>
            Indicates whether the query result was served from the query cache or not.
            If the query result is served from the query cache, the extra return attribute
            will not contain any stats sub-attribute and no profile sub-attribute.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.HasMore">
            <summary>
            Whether there are more results available for the cursor on the server.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Result">
            <summary>
            Result documents (might be empty if query has no results).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Id">
            <summary>
            ID of temporary cursor created on the server (optional).
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.Models.CursorResponseExtra">
            <summary>
            Additional data relating to a query result cursor.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseExtra.Id">
            <summary>
            Query ID, can be used to fetch more results from a cursor or to delete a cursor.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseExtra.Stats">
            <summary>
            Various stats related to the query.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseExtra.Plan">
            <summary>
            Plan info is only available when the <see cref="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.Profile"/> option
            is set to 2.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseExtra.Profile">
            <summary>
            Profile info is only available when the <see cref="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.Profile"/> option
            is set to 1 or 2.
            </summary>
            <remarks>
            The following profile entries are expected:
            - "initializing"
            - "parsing"
            - "optimizing ast"
            - "loading collections"
            - "instantiating plan"
            - "optimizing plan"
            - "executing"
            - "finalizing"
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseExtra.Warnings">
            <summary>
            List of warnings related to the query.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponsePlan.Initialize">
            <summary>
            This is not available from ArangoDB 3.6 onwards.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseStats.FullCount">
            <summary>
            When <see cref="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.FullCount"/> is used,
            the fullCount attribute will contain the number of documents in the result
            before the last top-level LIMIT in the query was applied.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseStats.Nodes">
            <summary>
            Populated when <see cref="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.Profile"/> is set to 2.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseWarning.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.CursorResponseWarning.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.Models.DeleteCursorResponse">
            <summary>
            Represents a response returned after deleting a cursor.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.DeleteCursorResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.DeleteCursorResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.DeleteCursorResponse.Id">
            <summary>
            The id of the cursor.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.Models.PostCursorBody">
            <summary>
            Represents a request body for creating an AQL query cursor.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.Query">
            <summary>
            Contains the AQL query to be executed.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.BindVars">
            <summary>
            The bind parameters of the AQL query.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.Options">
            <summary>
            Extra options for the AQL query.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.Count">
            <summary>
            Whether the number of documents in the result set should be returned
            in <see cref="P:ArangoDBNetStandard.CursorApi.Models.CursorResponse`1.Count"/>.
            Calculating the “count” attribute might have a performance impact for some queries
            so this option is turned off by default, and “count” is only returned when requested.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.BatchSize">
            <summary>
            Maximum number of result documents to be transferred from the server
            to the client in one roundtrip. If this attribute is not set,
            a server-controlled default value will be used.
            A value of 0 is disallowed.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.Cache">
            <summary>
            Flag to determine whether the AQL query results cache shall be used.
            If set to false, then any query cache lookup will be skipped for the query.
            If set to true, it will lead to the query cache being checked for the query
            if the query cache mode is either 'on' or 'demand'.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.MemoryLimit">
            <summary>
            The maximum number of memory (measured in bytes) that the query is allowed to use.
            If set, then the query will fail with error “resource limit exceeded”
            in case it allocates too much memory.
            A value of 0 indicates that there is no memory limit.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorBody.Ttl">
            <summary>
            The time-to-live for the cursor (in seconds).
            The cursor will be removed on the server automatically after the specified amount of time.
            This is useful to ensure garbage collection of cursors that are not fully fetched by clients.
            If not set, a server-defined value will be used (default: 30 seconds).
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions">
            <summary>
            Represents extra options for the AQL query.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.FullCount">
            <summary>
            If set to true and the query contains a LIMIT clause,
            then the result will have an extra attribute with the
            sub-attributes stats and fullCount,
            { ... , "extra": { "stats": { "fullCount": 123 } } }.
            The fullCount attribute will contain the number of documents
            in the result before the last top-level LIMIT in the query was applied.
            It can be used to count the number of documents that match
            certain filter criteria, but only return a subset of them, in one go.
            It is thus similar to MySQL’s SQL_CALC_FOUND_ROWS hint.
            Note that setting the option will disable a few LIMIT optimizations
            and may lead to more documents being processed, and thus make queries run longer.
            Note that the fullCount attribute may only be present in the result if the query
            has a top-level LIMIT clause and the LIMIT clause is actually used in the query.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.MaxPlans">
            <summary>
            Limits the maximum number of plans that are created by the AQL query optimizer.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.MaxWarningCount">
            <summary>
            Limits the maximum number of warnings a query will return.
            The number of warnings a query will return is limited to 10 by default,
            but that number can be increased or decreased by setting this attribute.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.FailOnWarning">
            <summary>
            When set to true, the query will throw an exception and abort
            instead of producing a warning. This option should be used during development
            to catch potential issues early. When the attribute is set to false,
            warnings will not be propagated to exceptions and will be returned with the query result.
            There is also a server configuration option --query.fail-on-warning for setting
            the default value for failOnWarning so it does not need to be set on a per-query level.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.Stream">
            <summary>
            Specify true and the query will be executed in a streaming fashion. The query result
            is not stored on the server, but calculated on the fly. Beware: long-running queries
            will need to hold the collection locks for as long as the query cursor exists.
            When set to false a query will be executed right away in its entirety. In that case
            query results are either returned right away (if the result set is small enough),
            or stored on the arangod instance and accessible via the cursor API (with respect to the ttl).
            It is advisable to only use this option on short-running queries or without exclusive locks
            (write-locks on MMFiles). Please note that the query options cache,
            count and fullCount will not work on streaming queries. Additionally query statistics,
            warnings and profiling data will only be available after the query is finished.
            The default value is false
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.Optimizer">
            <summary>
            A list of to-be-included or to-be-excluded optimizer rules can be put 
            into the <see cref="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptionsOptimizer.Rules"/> attribute, 
            telling the optimizer to include or exclude specific rules.
            To disable a rule, prefix its name with a -, to enable a rule, prefix it with a +. 
            There is also a pseudo-rule all, which will match all optimizer rules.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.Profile">
            <summary>
            If set to true or 1, then the additional query profiling information will be returned
            in the sub-attribute profile of the extra return attribute, if the query result is not served
            from the query cache. Set to 2 the query will include execution stats per query plan node
            in sub-attribute stats.nodes of the extra return attribute. Additionally the query plan
            is returned in the sub-attribute extra.plan.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.SatelliteSyncWait">
            <summary>
            This Enterprise Edition parameter allows to configure how long a DBServer will have time
            to bring the satellite collections involved in the query into sync. The default value
            is 60.0 (seconds). When the max time has been reached the query will be stopped.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.MaxRuntime">
            <summary>
            The query has to be executed within the given runtime or it will be killed.
            The value is specified in seconds. A value of 0 means no timeout will be enforced.
            The default value is 0 (no timeout).
            Available in ArangoDB 3.6 onwards.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.MaxTransactionSize">
            <summary>
            Transaction size limit in bytes. Honored by the RocksDB storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.IntermediateCommitSize">
            <summary>
            Maximum total size of operations after which an intermediate commit is performed automatically.
            Honored by the RocksDB storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.IntermediateCommitCount">
            <summary>
            Maximum number of operations after which an intermediate commit is performed automatically.
            Honored by the RocksDB storage engine only.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PostCursorOptions.SkipInaccessibleCollections">
            <summary>
            AQL queries (especially graph traversals) will treat collection to which a user
            has no access rights as if these collections were empty. Instead of returning
            a forbidden access error, your queries will execute normally.
            This is intended to help with certain use-cases: A graph contains several collections
            and different users execute AQL queries on that graph. You can now naturally limit
            the accessible results by changing the access rights of users on collections.
            This feature is only available in the Enterprise Edition.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1">
            <summary>
            Represents a response returned when reading next batch of results
            from an existing cursor.
            </summary>
            <remarks>
            Note that even if <see cref="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.HasMore"/> returns true, the next call might still return no documents.
            If, however, <see cref="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.HasMore"/> is false, then the cursor is exhausted.
            Once the <see cref="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.HasMore"/> has a value of false, the client can stop.
            </remarks>
            <typeparam name="T">The type of the document deserialized in the results.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.Id">
            <summary>
            The cursor identifier.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.Result">
            <summary>
            A list of documents for the current batch.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.HasMore">
            <summary>
            Whether more results are available to fetch from the cursor.
            False if this was the last batch.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.Count">
            <summary>
            The total number of result documents available
            (only available if requested in the initial cursor query).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.CursorApi.Models.PutCursorResponse`1.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient">
            <summary>
            A client for interacting with ArangoDB Databases endpoints,
            implementing <see cref="T:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient"/>.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient._client">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient._databaseApiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="client"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.PostDatabaseAsync(ArangoDBNetStandard.DatabaseApi.Models.PostDatabaseBody)">
            <summary>
            Creates a new database.
            (Only possible from within the _system database)
            </summary>
            <param name="request">The parameters required by this endpoint.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.DeleteDatabaseAsync(System.String)">
            <summary>
            Delete a database. Dropping a database is only possible from within the _system database.
            The _system database itself cannot be dropped.
            DELETE /_api/database/{database-name}
            </summary>
            <param name="databaseName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.GetDatabasesAsync">
            <summary>
            Retrieves the list of all existing databases.
            (Only possible from within the _system database)
            </summary>
            <remarks>
            You should use <see cref="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.GetUserDatabasesAsync"/> to fetch the list of the databases
            available for the current user.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.GetUserDatabasesAsync">
            <summary>
            Retrieves the list of all databases the current user can access.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.DatabaseApiClient.GetCurrentDatabaseInfoAsync">
            <summary>
            Retrieves information about the current database.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient">
            <summary>
            Defines a client for the ArangoDB Database API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient.PostDatabaseAsync(ArangoDBNetStandard.DatabaseApi.Models.PostDatabaseBody)">
            <summary>
            Creates a new database.
            (Only possible from within the _system database)
            </summary>
            <param name="request">The parameters required by this endpoint.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient.DeleteDatabaseAsync(System.String)">
            <summary>
            Delete a database. Dropping a database is only possible from within the _system database.
            The _system database itself cannot be dropped.
            DELETE /_api/database/{database-name}
            </summary>
            <param name="databaseName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient.GetDatabasesAsync">
            <summary>
            Retrieves the list of all existing databases.
            (Only possible from within the _system database)
            </summary>
            <remarks>
            You should use <see cref="M:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient.GetUserDatabasesAsync"/> to fetch the list of the databases
            available for the current user.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient.GetUserDatabasesAsync">
            <summary>
            Retrieves the list of all databases the current user can access.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DatabaseApi.IDatabaseApiClient.GetCurrentDatabaseInfoAsync">
            <summary>
            Retrieves information about the current database.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DatabaseApi.Models.CurrentDatabaseInfo">
            <summary>
            Represents information about the current database.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.CurrentDatabaseInfo.Name">
            <summary>
            The name of the current database.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.CurrentDatabaseInfo.Id">
            <summary>
            The id of the current database.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.CurrentDatabaseInfo.Path">
            <summary>
            The filesystem path of the current database.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.CurrentDatabaseInfo.IsSystem">
            <summary>
            Whether or not the current database is the _system database.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.DeleteDatabaseResponse.Code">
            <summary>
            HttpStatus
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.DeleteDatabaseResponse.Result">
            <summary>
            True if the database was deleted, otherwise see <see cref="P:ArangoDBNetStandard.DatabaseApi.Models.DeleteDatabaseResponse.Code"/>
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.DeleteDatabaseResponse.Error">
            <summary>
            Error specified in Arango Docs
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DatabaseApi.Models.GetCurrentDatabaseInfoResponse">
            <summary>
            Represents a response containing information about the current database.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.GetCurrentDatabaseInfoResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.GetCurrentDatabaseInfoResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.GetCurrentDatabaseInfoResponse.Result">
            <summary>
            The database information.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DatabaseApi.Models.GetDatabasesResponse">
            <summary>
            Represents the content of the response returned
            by an endpoint that gets the list of databases.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.GetDatabasesResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.GetDatabasesResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.GetDatabasesResponse.Result">
            <summary>
            The list of databases.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DatabaseApi.Models.PostDatabaseResponse">
            <summary>
            Represents the content of the response returned
            by an endpoint that creates a new database.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.PostDatabaseResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.PostDatabaseResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DatabaseApi.Models.PostDatabaseResponse.Result">
            <summary>
            Indicates that the database was created. Always true.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.DocumentApiClient">
            <summary>
            Provides access to ArangoDB document API.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.DocumentApi.DocumentApiClient._docApiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.DocumentApi.DocumentApiClient._client">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.DocumentApi.DocumentApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.DocumentApi.DocumentApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="client"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PostDocumentAsync``1(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Post a single document.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="document"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PostDocumentAsync``2(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Post a single document with the possibility to specify a different type
            for the new document object returned in the response.
            </summary>
            <typeparam name="T">The type of the post object used to record a new document.</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="collectionName"></param>
            <param name="document"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PostDocumentsAsync``1(System.String,System.Collections.Generic.IList{``0},ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Post multiple documents in a single request.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documents"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PutDocumentsAsync``1(System.String,System.Collections.Generic.IList{``0},ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Replace multiple documents.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documents"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PutDocumentAsync``1(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Replaces the document with the provided document ID with the one in
            the body, provided there is such a document and no precondition is
            violated.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="documentId"></param>
            <param name="doc"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PutDocumentAsync``1(System.String,System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery)">
            <summary>
            Replaces the document based on its Document ID with the one in
            the body, provided there is such a document and no precondition is
            violated.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="doc"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.GetDocumentAsync``1(System.String,System.String)">
            <summary>
            Get an existing document.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.GetDocumentAsync``1(System.String)">
            <summary>
            Get an existing document based on its Document ID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="documentId"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.GetDocumentsAsync``1(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Get multiple documents.
            </summary>
            <typeparam name="T">The type of the documents
            deserialized from the response.</typeparam>
            <param name="collectionName">Collection name</param>
            <param name="selectors">Document keys to fetch documents for</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.DeleteDocumentAsync(System.String,System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document.
            </summary>
            <remarks>
            This method overload is provided as a convenience when the client does not care about the type of <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>
            in the returned <see cref="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1"/>. Its value will be <c>null</c> when 
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery.ReturnOld"/> is either <c>false</c> or not set, so this overload is useful in the default case 
            when deleting documents.
            </remarks>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.DeleteDocumentAsync(System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document based on its document ID.
            </summary>
            <remarks>
            This method overload is provided as a convenience when the client does not care about the type of <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>
            in the returned <see cref="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1"/>. Its value will be <c>null</c> when 
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery.ReturnOld"/> is either <c>false</c> or not set, so this overload is useful in the default case 
            when deleting documents.
            </remarks>
            <param name="documentId"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.DeleteDocumentAsync``1(System.String,System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.DeleteDocumentAsync``1(System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document based on its document ID.
            </summary>
            <param name="documentId"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.DeleteDocumentsAsync(System.String,System.Collections.Generic.IList{System.String},ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery)">
            <summary>
            Delete multiple documents based on the passed document selectors.
            A document selector is either the document ID or the document Key.
            </summary>
            <remarks>
            This method overload is provided as a convenience when the client does not care about the type of <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>
            in the returned <see cref="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsResponse`1"/>. These will be <c>null</c> when 
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery.ReturnOld"/> is either <c>false</c> or not set, so this overload is useful in the default case 
            when deleting documents.
            </remarks>
            <param name="collectionName"></param>
            <param name="selectors"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.DeleteDocumentsAsync``1(System.String,System.Collections.Generic.IList{System.String},ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery)">
            <summary>
            Delete multiple documents based on the passed document selectors.
            A document selector is either the document ID or the document Key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="selectors"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PatchDocumentsAsync``2(System.String,System.Collections.Generic.IList{``0},ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Partially updates documents, the documents to update are specified
            by the _key attributes in the body objects. All attributes from the
            patch documents will be added to the existing documents if they do
            not yet exist, and overwritten in the existing documents if they do
            exist there.
            Setting an attribute value to null in the patch documents will cause a
            value of null to be saved for the attribute by default.
            If ignoreRevs is false and there is a _rev attribute in a
            document in the body and its value does not match the revision of
            the corresponding document in the database, the precondition is
            violated.
            PATCH /_api/document/{collection}
            </summary>
            <typeparam name="T">Type of the patch object used to partially update documents.</typeparam>
            <typeparam name="U">Type of the returned documents, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="collectionName"></param>
            <param name="patches"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PatchDocumentAsync``2(System.String,System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery)">
            <summary>
            Partially updates the document identified by document-handle.
            The body of the request must contain a JSON document with the
            attributes to patch(the patch document). All attributes from the
            patch document will be added to the existing document if they do not
            yet exist, and overwritten in the existing document if they do exist
            there.
            PATCH/_api/document/{document-handle}
            </summary>
            <typeparam name="T">Type of the patch object used to partially update a document.</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.PatchDocumentAsync``2(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Partially updates the document identified by document-handle.
            The body of the request must contain a JSON document with the
            attributes to patch(the patch document). All attributes from the
            patch document will be added to the existing document if they do not
            yet exist, and overwritten in the existing document if they do exist
            there.
            PATCH/_api/document/{document-handle}
            </summary>
            <typeparam name="T">Type of the patch object used to partially update a document.</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="documentId"></param>
            <param name="body"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.HeadDocumentAsync(System.String,System.String,ArangoDBNetStandard.DocumentApi.Models.HeadDocumentHeader)">
            <summary>
            Like GET, but only returns the header fields and not the body. You
            can use this call to get the current revision of a document or check if
            the document was deleted.
            HEAD /_api/document/{document-handle}
            </summary>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="headers"></param>
            <remarks>
            200: is returned if the document was found. 
            304: is returned if the “If-None-Match” header is given and the document has the same version. 
            404: is returned if the document or collection was not found. 
            412: is returned if an “If-Match” header is given and the found document has a different version. The response will also contain the found document’s current revision in the Etag header.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.DocumentApiClient.HeadDocumentAsync(System.String,ArangoDBNetStandard.DocumentApi.Models.HeadDocumentHeader)">
            <summary>
            Like GET, but only returns the header fields and not the body. You
            can use this call to get the current revision of a document or check if
            the document was deleted.
            HEAD/_api/document/{document-handle}
            </summary>
            <param name="documentId"></param>
            <param name="headers">Object containing a dictionary of Header keys and values</param>
            <exception cref="T:System.ArgumentException">Document ID is invalid.</exception>
            <remarks>
            200: is returned if the document was found. 
            304: is returned if the “If-None-Match” header is given and the document has the same version. 
            404: is returned if the document or collection was not found. 
            412: is returned if an “If-Match” header is given and the found document has a different version. The response will also contain the found document’s current revision in the Etag header.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.IDocumentApiClient">
            <summary>
            Defines a client to access the ArangoDB Document API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PostDocumentAsync``1(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Post a single document.
            </summary>
            <typeparam name="T">The type of the post object used to record a new document.</typeparam>
            <param name="collectionName"></param>
            <param name="document"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PostDocumentAsync``2(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Post a single document with the possibility to specify a different type
            for the new document object returned in the response.
            </summary>
            <typeparam name="T">The type of the post object used to record a new document.</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="collectionName"></param>
            <param name="document"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PostDocumentsAsync``1(System.String,System.Collections.Generic.IList{``0},ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Post multiple documents in a single request.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documents"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PutDocumentsAsync``1(System.String,System.Collections.Generic.IList{``0},ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Replace multiple documents.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documents"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PutDocumentAsync``1(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Replaces the document with the provided document ID with the one in
            the body, provided there is such a document and no precondition is
            violated.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="documentId"></param>
            <param name="doc"></param>
            <param name="opts"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PutDocumentAsync``1(System.String,System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery)">
            <summary>
            Replaces the document based on its Document ID with the one in
            the body, provided there is such a document and no precondition is
            violated.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="doc"></param>
            <param name="opts"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.GetDocumentAsync``1(System.String,System.String)">
            <summary>
            Get an existing document.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.GetDocumentAsync``1(System.String)">
            <summary>
            Get an existing document based on its Document ID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="documentId"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.GetDocumentsAsync``1(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Get multiple documents.
            </summary>
            <typeparam name="T">The type of the documents
            deserialized from the response.</typeparam>
            <param name="collectionName">Collection name</param>
            <param name="selectors">Document keys to fetch documents for</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.DeleteDocumentAsync(System.String,System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document.
            </summary>
            <remarks>
            This method overload is provided as a convenience when the client does not care about the type of <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>
            in the returned <see cref="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1"/>. Its value will be <c>null</c> when 
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery.ReturnOld"/> is either <c>false</c> or not set, so this overload is useful in the default case 
            when deleting documents.
            </remarks>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.DeleteDocumentAsync(System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document based on its document ID.
            </summary>
            <remarks>
            This method overload is provided as a convenience when the client does not care about the type of <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>
            in the returned <see cref="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1"/>. Its value will be <c>null</c> when 
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery.ReturnOld"/> is either <c>false</c> or not set, so this overload is useful in the default case 
            when deleting documents.
            </remarks>
            <param name="documentId"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.DeleteDocumentAsync``1(System.String,System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.DeleteDocumentAsync``1(System.String,ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery)">
            <summary>
            Delete a document based on its document ID.
            </summary>
            <param name="documentId"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.DeleteDocumentsAsync(System.String,System.Collections.Generic.IList{System.String},ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery)">
            <summary>
            Delete multiple documents based on the passed document selectors.
            A document selector is either the document ID or the document Key.
            </summary>
            <remarks>
            This method overload is provided as a convenience when the client does not care about the type of <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>
            in the returned <see cref="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsResponse`1"/>. These will be <c>null</c> when 
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery.ReturnOld"/> is either <c>false</c> or not set, so this overload is useful in the default case 
            when deleting documents.
            </remarks>
            <param name="collectionName"></param>
            <param name="selectors"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.DeleteDocumentsAsync``1(System.String,System.Collections.Generic.IList{System.String},ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery)">
            <summary>
            Delete multiple documents based on the passed document selectors.
            A document selector is either the document ID or the document Key.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionName"></param>
            <param name="selectors"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PatchDocumentsAsync``2(System.String,System.Collections.Generic.IList{``0},ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Partially updates documents, the documents to update are specified
            by the _key attributes in the body objects.The body of the
            request must contain a JSON array of document updates with the
            attributes to patch(the patch documents). All attributes from the
            patch documents will be added to the existing documents if they do
            not yet exist, and overwritten in the existing documents if they do
            exist there.
            Setting an attribute value to null in the patch documents will cause a
            value of null to be saved for the attribute by default.
            If ignoreRevs is false and there is a _rev attribute in a
            document in the body and its value does not match the revision of
            the corresponding document in the database, the precondition is
            violated.
            PATCH/_api/document/{collection}
            </summary>
            <typeparam name="T">Type of the patch object used to partially update documents.</typeparam>
            <typeparam name="U">Type of the returned documents, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="collectionName"></param>
            <param name="patches"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PatchDocumentAsync``2(System.String,System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery)">
            <summary>
            Partially updates the document identified by document-handle.
            The body of the request must contain a JSON document with the
            attributes to patch(the patch document). All attributes from the
            patch document will be added to the existing document if they do not
            yet exist, and overwritten in the existing document if they do exist
            there.
            PATCH/_api/document/{document-handle}
            </summary>
            <typeparam name="T">Type of the patch object used to partially update a document.</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.PatchDocumentAsync``2(System.String,``0,ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Partially updates the document identified by document-handle.
            The body of the request must contain a JSON document with the
            attributes to patch(the patch document). All attributes from the
            patch document will be added to the existing document if they do not
            yet exist, and overwritten in the existing document if they do exist
            there.
            PATCH/_api/document/{document-handle}
            </summary>
            <typeparam name="T">Type of the patch object used to partially update a document.</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="documentId"></param>
            <param name="body"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.HeadDocumentAsync(System.String,System.String,ArangoDBNetStandard.DocumentApi.Models.HeadDocumentHeader)">
            <summary>
            Like GET, but only returns the header fields and not the body. You
            can use this call to get the current revision of a document or check if
            the document was deleted.
            HEAD /_api/document/{document-handle}
            </summary>
            <param name="collectionName"></param>
            <param name="documentKey"></param>
            <param name="headers"></param>
            <remarks>
            200: is returned if the document was found. 
            304: is returned if the “If-None-Match” header is given and the document has the same version. 
            404: is returned if the document or collection was not found. 
            412: is returned if an “If-Match” header is given and the found document has a different version. The response will also contain the found document’s current revision in the Etag header.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.IDocumentApiClient.HeadDocumentAsync(System.String,ArangoDBNetStandard.DocumentApi.Models.HeadDocumentHeader)">
            <summary>
            Like GET, but only returns the header fields and not the body. You
            can use this call to get the current revision of a document or check if
            the document was deleted.
            HEAD/_api/document/{document-handle}
            </summary>
            <param name="documentId"></param>
            <param name="headers">Object containing a dictionary of Header keys and values</param>
            <exception cref="T:System.ArgumentException">Document ID is invalid.</exception>
            <remarks>
            200: is returned if the document was found. 
            304: is returned if the “If-None-Match” header is given and the document has the same version. 
            404: is returned if the document or collection was not found. 
            412: is returned if an “If-Match” header is given and the found document has a different version. The response will also contain the found document’s current revision in the Etag header.
            </remarks>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery">
            <summary>
            Represents query parameters used when deleting a single document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery.WaitForSync">
            <summary>
            Wait until deletion operation has been synced to disk.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery.ReturnOld">
            <summary>
            Whether to return the complete previous revision of the changed document
            under the <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentQuery.Silent">
            <summary>
            If set to true, an empty object will be returned as response.
            No meta-data will be returned for the deleted documents.
            This option can be used to save some network traffic.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsDocumentResponse`1">
            <summary>
            Represents the response for one document when deleting multiple document.
            </summary>
            <typeparam name="T">The type of the deserialized old document object when requested.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsDocumentResponse`1.Error">
            <summary>
            Indicates whether an error occurred.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsDocumentResponse`1.ErrorMessage">
            <summary>
            ArangoDB error message.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsDocumentResponse`1.ErrorNum">
            <summary>
            ArangoDB error number.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery">
            <summary>
            Represents query parameters used when deleting multiple document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery.WaitForSync">
            <summary>
            Wait until deletion operation has been synced to disk.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery.ReturnOld">
            <summary>
            Whether to return the complete previous revision of the changed document
            under the <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentResponse`1.Old"/>.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery.IgnoreRevs">
            <summary>
            If set to true, ignore any _rev attribute in the selectors.
            No revision check is performed.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery.Silent">
            <summary>
            If set to true, an empty object will be returned as response.
            No meta-data will be returned for the deleted documents.
            This option can be used to save some network traffic.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsResponse`1">
            <summary>
            Represents the response for deleting multiple documents.
            </summary>
            <typeparam name="T">The type of the deserialized old document object when requested.</typeparam>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsResponse`1.#ctor">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsResponse`1"/>.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsResponse`1.Empty">
            <summary>
            Creates an empty response.
            This is used when <see cref="P:ArangoDBNetStandard.DocumentApi.Models.DeleteDocumentsQuery.Silent"/> is true.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.DocumentBase">
            <summary>
            Base model for POST, PATCH, DELETE document responses.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DocumentBase._key">
            <summary>
            ArangoDB document key.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DocumentBase._id">
            <summary>
            ArangoDB document ID.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.DocumentBase._rev">
            <summary>
            ArangoDB document revision tag.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentResponse`1">
            <summary>
            Represents a response returned when updating a single document.
            </summary>
            <typeparam name="T">The type of the deserialized new/old document object when requested.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentResponse`1.New">
            <summary>
            Deserialized copy of the new document object. This will only be present if requested with the
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnNew"/> option.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentResponse`1.Old">
            <summary>
            Deserialized copy of the old document object. This will only be present if requested with the
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentQuery.ReturnOld"/> option.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentResponse`1._oldRev">
            <summary>
            Contains the revision of the old (now updated) document.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsDocumentResponse`1">
            <summary>
            Represents the response for one document when updating multiple document.
            </summary>
            <typeparam name="T">The type of the deserialized new/old document object when requested.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsDocumentResponse`1.Error">
            <summary>
            Indicates whether an error occurred.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsDocumentResponse`1.ErrorMessage">
            <summary>
            ArangoDB error message.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsDocumentResponse`1.ErrorNum">
            <summary>
            ArangoDB error number.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery">
            <summary>
            Represents query parameters used when updating multiple documents.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.KeepNull">
            <summary>
            If the intention is to delete existing attributes with the patch command,
            this query parameter can be used with a value of false.
            This will modify the behavior of the patch command to remove any attributes
            from the existing document that are contained in the patch document with an attribute value of null.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.MergeObjects">
            <summary>
            Controls whether objects (not arrays) will be merged
            if present in both the existing and the patch document.
            If set to false, the value in the patch document will
            overwrite the existing document’s value.
            If set to true, objects will be merged.
            The default is true.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.WaitForSync">
            <summary>
            Wait until the new documents have been synced to disk.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.IgnoreRevs">
            <summary>
            By default, or if this is set to true, the _rev attributes
            in the given documents are ignored.
            If this is set to false, then any _rev attribute given
            in a body document is taken as a precondition.
            The document is only updated if the current revision is the one specified.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.ReturnOld">
            <summary>
            Return additionally the complete previous revision
            of the changed documents in the result.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.ReturnNew">
            <summary>
            Return additionally the complete new documents in the result.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.Silent">
            <summary>
            If set to true, an empty object will be returned as response.
            No meta-data will be returned for the created document.
            This option can be used to save some network traffic.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsResponse`1">
            <summary>
            Represents the response for updating multiple documents.
            </summary>
            <typeparam name="T">The type of the deserialized new/old document object when requested.</typeparam>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsResponse`1.#ctor">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsResponse`1"/>.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsResponse`1.Empty">
            <summary>
            Creates an empty response.
            This is used when <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PatchDocumentsQuery.Silent"/> is true.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PostDocumentResponse`1">
            <summary>
            Response after posting a single document
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentResponse`1.New">
            <summary>
            Deserialized copy of the new document object. This will only be present if requested with the
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnNew"/> option.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentResponse`1.Old">
            <summary>
            Deserialized copy of the old document object. This will only be present if requested with the
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnOld"/> option.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsDocumentResponse`1">
            <summary>
            Response model for a single POST Document request.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery">
            <summary>
            Options used when calling ArangoDB POST document endpoint
            to create one or multiple documents.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnNew">
            <summary>
            Whether to return a full copy of the new document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ReturnOld">
            <summary>
            Whether to return a full copy of the old document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.Silent">
            <summary>
            If set to true, an empty object will be returned as response.
            No meta-data will be returned for the created document.
            This option can be used to save some network traffic.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.Overwrite">
            <summary>
            If a document already exists, whether to overwrite (replace) the document rather than respond with error.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.ToQueryString">
            <summary>
            Get the set of options in a format suited to a URL query string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsResponse`1">
            <summary>
            Represents the response for creating multiple documents.
            </summary>
            <typeparam name="T">The type of the deserialized new/old document object when requested.</typeparam>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsResponse`1.#ctor">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsResponse`1"/>.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsResponse`1.Empty">
            <summary>
            Creates an empty response.
            This is used when <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentsQuery.Silent"/> is true.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery">
            <summary>
            Options used when calling ArangoDB PUT document endpoint
            to replace one document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.WaitForSync">
            <summary>
            Wait until document has been synced to disk.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.IgnoreRevs">
            <summary>
            By default, or if this is set to true, the _rev attributes in
            the given document is ignored. If this is set to false,
            then the _rev attribute given in the body document is taken as a precondition.
            The document is only replaced if the current revision is the one specified.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.ReturnOld">
            <summary>
            Whether to return the complete previous revision of the changed
            document under <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentResponse`1.Old"/>.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.ReturnNew">
            <summary>
            Whether to return the complete new revision of the changed
            document under <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PostDocumentResponse`1.New"/>.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.Silent">
            <summary>
            If set to true, an empty object will be returned as response.
            No meta-data will be returned for the replaced document.
            This option can be used to save some network traffic.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.ToQueryString">
            <summary>
            Get the set of options in a format suited to a URL query string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PutDocumentResponse`1">
            <summary>
            Represents a response returned when replacing a single document.
            </summary>
            <typeparam name="T">The type of the deserialized new/old document object when requested.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentResponse`1._oldRev">
            <summary>
            Contains the revision of the old (now replaced) document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentResponse`1.New">
            <summary>
            Deserialized copy of the new document object. This will only be present if requested with the
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.ReturnNew"/> option.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentResponse`1.Old">
            <summary>
            Deserialized copy of the old document object. This will only be present if requested with the
            <see cref="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentQuery.ReturnOld"/> option.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsDocumentResponse`1">
            <summary>
            Represents the response for one document when replacing multiple document.
            </summary>
            <typeparam name="T">The type of the deserialized new/old document object when requested.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsDocumentResponse`1.Error">
            <summary>
            Indicates whether an error occurred.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsDocumentResponse`1.ErrorMessage">
            <summary>
            ArangoDB error message.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsDocumentResponse`1.ErrorNum">
            <summary>
            ArangoDB error number.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery">
            <summary>
            Options used when calling ArangoDB PUT document endpoint
            to replace multiple document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery.WaitForSync">
            <summary>
            Whether to wait until the new documents have been synced to disk.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery.IgnoreRevs">
            <summary>
            By default, or if this is set to true, the _rev attributes in
            the given documents are ignored. If this is set to false, then
            any _rev attribute given in a body document is taken as a
            precondition. The document is only replaced if the current revision
            is the one specified.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery.ReturnOld">
            <summary>
            Whether to return the complete previous revision of the changed
            documents in the result.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery.ReturnNew">
            <summary>
            Whether to return the complete new revision of the changed
            documents in the result.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery.Silent">
            <summary>
            If set to true, an empty object will be returned as response.
            No meta-data will be returned for the created document.
            This option can be used to save some network traffic.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsQuery.ToQueryString">
            <summary>
            Get the set of options in a format suited to a URL query string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsResponse`1">
            <summary>
            Represents the response returned when replacing multiple document.
            </summary>
            <typeparam name="T">The type of the deserialized new/old document object when requested.</typeparam>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsResponse`1.#ctor">
            <summary>
            Creates a new instance of <see cref="T:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsResponse`1"/>
            with default values.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.DocumentApi.Models.PutDocumentsResponse`1.Empty">
            <summary>
            Creates an empty response.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.GraphApiClient">
            <summary>
            A client for interacting with ArangoDB Graphs endpoints,
            implementing <see cref="T:ArangoDBNetStandard.GraphApi.IGraphApiClient"/>.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.GraphApi.GraphApiClient._transport">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.GraphApi.GraphApiClient._graphApiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.GraphApi.GraphApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="transport"></param>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.GraphApi.GraphApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="transport"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PostGraphAsync(ArangoDBNetStandard.GraphApi.Models.PostGraphBody,ArangoDBNetStandard.GraphApi.Models.PostGraphQuery)">
            <summary>
            Creates a new graph in the graph module.
            POST /_api/gharial
            </summary>
            <remarks>
            The creation of a graph requires the name of the graph and a definition of its edges.
            </remarks>
            <param name="postGraphBody">The information of the graph to create.</param>
            <param name="query">Optional query parameters of the request.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetGraphsAsync">
            <summary>
            Lists all graphs stored in this database.
            GET /_api/gharial
            </summary>
            <remarks>
            Note: The <see cref="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.Name"/> property is null for <see cref="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetGraphsAsync"/>
            in ArangoDB 4.5.2 and below, in which case you can use <see cref="P:ArangoDBNetStandard.GraphApi.Models.GraphResult._key"/> instead.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.DeleteGraphAsync(System.String,ArangoDBNetStandard.GraphApi.Models.DeleteGraphQuery)">
            <summary>
            Deletes an existing graph object by name.
            Optionally all collections not used by other
            graphs can be deleted as well, using <see cref="T:ArangoDBNetStandard.GraphApi.Models.DeleteGraphQuery"/>.
            DELETE /_api/gharial/{graph-name}
            </summary>
            <param name="graphName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetGraphAsync(System.String)">
            <summary>
            Selects information for a given graph.
            Will return the edge definitions as well as the orphan collections.
            GET /_api/gharial/{graph}
            </summary>
            <param name="graphName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetVertexCollectionsAsync(System.String)">
            <summary>
            Lists all vertex collections within the given graph.
            GET /_api/gharial/{graph}/vertex
            </summary>
            <param name="graphName">The name of the graph.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetEdgeCollectionsAsync(System.String)">
            <summary>
            Lists all edge collections within this graph.
            GET /_api/gharial/{graph}/edge
            </summary>
            <param name="graphName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PostEdgeDefinitionAsync(System.String,ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionBody)">
            <summary>
            Adds an additional edge definition to the graph.
            This edge definition has to contain a collection and an array of
            each from and to vertex collections. An edge definition can only
            be added if this definition is either not used in any other graph, or
            it is used with exactly the same definition. It is not possible to
            store a definition “e” from “v1” to “v2” in the one graph, and “e”
            from “v2” to “v1” in the other graph.
            POST /_api/gharial/{graph}/edge
            </summary>
            <param name="graphName">The name of the graph.</param>
            <param name="body">The information of the edge definition.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PostVertexCollectionAsync(System.String,ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionBody)">
            <summary>
            Adds a vertex collection to the set of orphan collections of the graph.
            If the collection does not exist, it will be created.
            POST /_api/gharial/{graph}/vertex
            </summary>
            <param name="graphName">The name of the graph.</param>
            <param name="body">The information of the vertex collection.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PostVertexAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PostVertexQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Adds a vertex to the given collection.
            POST/_api/gharial/{graph}/vertex/{collection}
            </summary>
            <typeparam name="T"></typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertex"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.DeleteEdgeDefinitionAsync(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteEdgeDefinitionQuery)">
            <summary>
            Remove one edge definition from the graph. This will only remove the
            edge collection, the vertex collections remain untouched and can still
            be used in your queries.
            DELETE/_api/gharial/{graph}/edge/{definition}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.DeleteVertexCollectionAsync(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteVertexCollectionQuery)">
            <summary>
            Removes a vertex collection from the graph and optionally deletes the collection,
            if it is not used in any other graph.
            It can only remove vertex collections that are no longer part of edge definitions,
            if they are used in edge definitions you are required to modify those first.
            DELETE/_api/gharial/{graph}/vertex/{collection}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PostEdgeAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PostEdgeQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Creates an edge in an existing graph.
            The edge must contain a _from and _to value
            referencing valid vertices in the graph.
            The edge has to conform to the definition of the edge collection it is added to.
            POST /_api/gharial/{graph}/edge/{collection}
            </summary>
            <typeparam name="T">The type of the edge to create.
            Must contain valid _from and _to properties once serialized.
            <c>null</c> properties are preserved during serialization.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="collectionName">The name of the edge collection the edge belongs to.</param>
            <param name="edge">The edge to create.</param>
            <param name="query">Optional query parameters of the request.</param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetEdgeAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetEdgeQuery)">
            <summary>
            Gets an edge from the given graph using the edge collection and _key attribute.
            </summary>
            <typeparam name="T">The type of the edge document to deserialize to.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="collectionName">The name of the edge collection the edge belongs to.</param>
            <param name="edgeKey">The _key attribute of the edge.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetEdgeAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetEdgeQuery)">
            <summary>
            Gets an edge from the given graph using the edge's document-handle.
            GET /_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">The type of the edge document to deserialize to.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="edgeHandle">The document-handle of the edge document.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.DeleteEdgeAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteEdgeQuery)">
            <summary>
            Removes an edge from the collection.
            DELETE /_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">The type of the edge that is returned in
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Old"/> if requested.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="collectionName">The name of the edge collection the edge belongs to.</param>
            <param name="edgeKey">The _key attribute of the edge.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.DeleteEdgeAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteEdgeQuery)">
            <summary>
            Removes an edge based on its document ID.
            </summary>
            <exception cref="T:System.ArgumentException">Provided document ID is invalid.</exception>
            <typeparam name="T">The type of the edge that is returned in
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Old"/> if requested.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="documentId">The document ID of the edge to delete.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetVertexAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetVertexQuery)">
            <summary>
            Gets a vertex from the given collection.
            GET/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertexKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetVertexAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetVertexQuery)">
            <summary>
            Gets a vertex based on its document ID.
            </summary>
            <exception cref="T:System.ArgumentException">Provided document ID is invalid.</exception>
            <param name="graphName">The name of the graph to get the vertex from.</param>
            <param name="documentId">The document ID of the vertex to retrieve.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.DeleteVertexAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteVertexQuery)">
            <summary>
            Removes a vertex from the collection.
            DELETE/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertexKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.DeleteVertexAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteVertexQuery)">
            <summary>
            Removes a vertex based on its document ID.
            </summary>
            <exception cref="T:System.ArgumentException">Provided document ID is invalid.</exception>
            <param name="graphName">The name of the graph to delete the vertex from.</param>
            <param name="documentId">The document ID of the vertex to delete.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PatchVertexAsync``2(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery)">
            <summary>
            Updates the data of the specific vertex in the collection.
            PATCH/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <typeparam name="T">Type of the patch object</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertexKey"></param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PatchVertexAsync``2(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery)">
            <summary>
            Updates the data of the specific vertex based on its document ID.
            </summary>
            <exception cref="T:System.ArgumentException">Provided document ID is invalid.</exception>
            <typeparam name="T">Type of the patch object</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="graphName">The name of the graph in which to update the vertex.</param>
            <param name="documentId">The document ID of the vertex to update.</param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PutEdgeAsync``1(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutEdgeQuery)">
            <summary>
            Replaces the data of an edge in the collection.
            PUT /_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">Type of the document used for the update.</typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="edgeKey"></param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PutEdgeAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutEdgeQuery)">
            <summary>
            Replaces the data of an edge based on its document ID.
            </summary>
            <exception cref="T:System.ArgumentException">Provided document ID is invalid.</exception>
            <typeparam name="T">Type of the document used for the update.</typeparam>
            <param name="graphName">The name of the graph in which to replace the edge.</param>
            <param name="documentId">The document ID of the edge to replace.</param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PutEdgeDefinitionAsync(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.PutEdgeDefinitionBody,ArangoDBNetStandard.GraphApi.Models.PutEdgeDefinitionQuery)">
            <summary>
            Change one specific edge definition.
            This will modify all occurrences of this definition in all graphs known to your database.
            PUT/_api/gharial/{graph}/edge/{definition}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PatchEdgeAsync``2(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery)">
            <summary>
            Updates the data of the specific edge in the collection.
            PATCH/_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">Type of the patch object used to perform a partial update of the edge document.</typeparam>
            <typeparam name="U">Type of the returned edge document,
            when <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnOld"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnNew"/> query params are used.</typeparam>
            <param name="graphName">The name of the graph in which to update the edge.</param>
            <param name="collectionName">The name of the edge collection.</param>
            <param name="edgeKey">The document key of the edge to update.</param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PatchEdgeAsync``2(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery)">
            <summary>
            Updates the data of the specific edge based on its document ID.
            </summary>
            <typeparam name="T">Type of the patch object used to perform a partial update of the edge document.</typeparam>
            <typeparam name="U">Type of the returned edge document,
            when <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnOld"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnNew"/> query params are used.</typeparam>
            <param name="graphName">The name of the graph in which to update the edge.</param>
            <param name="documentId">The document ID of the edge to update.</param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PutVertexAsync``1(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutVertexQuery)">
            <summary>
            Replaces the data of a vertex in the collection.
            PUT/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <typeparam name="T"></typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="key"></param>
            <param name="vertex"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.GraphApiClient.PutVertexAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutVertexQuery)">
            <summary>
            Replaces the data of a vertex based on its document ID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="graphName">The name of the graph in which to replace the vertex.</param>
            <param name="documentId">The document ID of the vertex to replace.</param>
            <param name="vertex"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.IGraphApiClient">
            <summary>
            Defines a client to access the ArangoDB Graph API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PostGraphAsync(ArangoDBNetStandard.GraphApi.Models.PostGraphBody,ArangoDBNetStandard.GraphApi.Models.PostGraphQuery)">
            <summary>
            Creates a new graph in the graph module.
            POST /_api/gharial
            </summary>
            <param name="postGraphBody">The information of the graph to create.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetGraphsAsync">
            <summary>
            Lists all graphs stored in this database.
            GET /_api/gharial
            </summary>
            <remarks>
            Note: The <see cref="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.Name"/> property is null for <see cref="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetGraphsAsync"/>
            in ArangoDB 4.5.2 and below, in which case you can use <see cref="P:ArangoDBNetStandard.GraphApi.Models.GraphResult._key"/> instead.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.DeleteGraphAsync(System.String,ArangoDBNetStandard.GraphApi.Models.DeleteGraphQuery)">
            <summary>
            Deletes an existing graph object by name.
            Optionally all collections not used by other
            graphs can be deleted as well, using <see cref="T:ArangoDBNetStandard.GraphApi.Models.DeleteGraphQuery"/>.
            DELETE /_api/gharial/{graph-name}
            </summary>
            <param name="graphName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetGraphAsync(System.String)">
            <summary>
            Selects information for a given graph.
            Will return the edge definitions as well as the orphan collections.
            GET /_api/gharial/{graph}
            </summary>
            <param name="graphName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetVertexCollectionsAsync(System.String)">
            <summary>
            Lists all vertex collections within the given graph.
            GET /_api/gharial/{graph}/vertex
            </summary>
            <param name="graphName">The name of the graph.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetEdgeCollectionsAsync(System.String)">
            <summary>
            Lists all edge collections within this graph.
            GET /_api/gharial/{graph}/edge
            </summary>
            <param name="graphName"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PostEdgeDefinitionAsync(System.String,ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionBody)">
            <summary>
            Adds an additional edge definition to the graph.
            This edge definition has to contain a collection and an array of
            each from and to vertex collections. An edge definition can only
            be added if this definition is either not used in any other graph, or
            it is used with exactly the same definition. It is not possible to
            store a definition “e” from “v1” to “v2” in the one graph, and “e”
            from “v2” to “v1” in the other graph.
            POST /_api/gharial/{graph}/edge
            </summary>
            <param name="graphName">The name of the graph.</param>
            <param name="body">The information of the edge definition.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PostVertexCollectionAsync(System.String,ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionBody)">
            <summary>
            Adds a vertex collection to the set of orphan collections of the graph.
            If the collection does not exist, it will be created.
            POST /_api/gharial/{graph}/vertex
            </summary>
            <param name="graphName">The name of the graph.</param>
            <param name="body">The information of the vertex collection.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PostVertexAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PostVertexQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Adds a vertex to the given collection.
            POST/_api/gharial/{graph}/vertex/{collection}
            </summary>
            <typeparam name="T"></typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertex"></param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.DeleteEdgeDefinitionAsync(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteEdgeDefinitionQuery)">
            <summary>
            Remove one edge definition from the graph. This will only remove the
            edge collection, the vertex collections remain untouched and can still
            be used in your queries.
            DELETE/_api/gharial/{graph}/edge/{definition}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.DeleteVertexCollectionAsync(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteVertexCollectionQuery)">
            <summary>
            Removes a vertex collection from the graph and optionally deletes the collection,
            if it is not used in any other graph.
            It can only remove vertex collections that are no longer part of edge definitions,
            if they are used in edge definitions you are required to modify those first.
            DELETE/_api/gharial/{graph}/vertex/{collection}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PostEdgeAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PostEdgeQuery,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Creates an edge in an existing graph.
            The edge must contain a _from and _to value
            referencing valid vertices in the graph.
            The edge has to conform to the definition of the edge collection it is added to.
            POST /_api/gharial/{graph}/edge/{collection}
            </summary>
            <typeparam name="T">The type of the edge to create.
            Must contain valid _from and _to properties once serialized.
            <c>null</c> properties are preserved during serialization.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="collectionName">The name of the edge collection the edge belongs to.</param>
            <param name="edge">The edge to create.</param>
            <param name="query"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetEdgeAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetEdgeQuery)">
            <summary>
            Gets an edge from the given graph using the edge collection and _key attribute.
            </summary>
            <typeparam name="T">The type of the edge document to deserialize to.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="collectionName">The name of the edge collection the edge belongs to.</param>
            <param name="edgeKey">The _key attribute of the edge.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetEdgeAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetEdgeQuery)">
            <summary>
            Gets an edge from the given graph using the edge's document-handle.
            GET /_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">The type of the edge document to deserialize to.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="edgeHandle">The document-handle of the edge document.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.DeleteEdgeAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteEdgeQuery)">
            <summary>
            Removes an edge from the collection.
            DELETE /_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">The type of the edge that is returned in
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Old"/> if requested.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="collectionName">The name of the edge collection the edge belongs to.</param>
            <param name="edgeKey">The _key attribute of the edge.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.DeleteEdgeAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteEdgeQuery)">
            <summary>
            Removes an edge based on its document ID.
            </summary>
            <typeparam name="T">The type of the edge that is returned in
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Old"/> if requested.</typeparam>
            <param name="graphName">The name of the graph.</param>
            <param name="documentId">The document ID of the edge to delete.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetVertexAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetVertexQuery)">
            <summary>
            Gets a vertex from the given collection.
            GET/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertexKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.GetVertexAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.GetVertexQuery)">
            <summary>
            Gets a vertex based on its document ID.
            </summary>
            <param name="graphName">The name of the graph to get the vertex from.</param>
            <param name="documentId">The document ID of the vertex to retrieve.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.DeleteVertexAsync``1(System.String,System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteVertexQuery)">
            <summary>
            Removes a vertex from the collection.
            DELETE/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertexKey"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.DeleteVertexAsync``1(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.DeleteVertexQuery)">
            <summary>
            Removes a vertex based on its document ID.
            </summary>
            <param name="graphName">The name of the graph to delete the vertex from.</param>
            <param name="documentId">The document ID of the vertex to delete.</param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PatchVertexAsync``2(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery)">
            <summary>
            Updates the data of the specific vertex in the collection.
            PATCH/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <typeparam name="T">Type of the patch object</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="vertexKey"></param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PatchVertexAsync``2(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery)">
            <summary>
            Updates the data of the specific vertex based on its document ID.
            </summary>
            <typeparam name="T">Type of the patch object</typeparam>
            <typeparam name="U">Type of the returned document, only applies when
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnNew"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchVertexQuery.ReturnOld"/>
            are used.</typeparam>
            <param name="graphName">The name of the graph in which to update the vertex.</param>
            <param name="documentId">The document ID of the vertex to update.</param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PutEdgeAsync``1(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutEdgeQuery)">
            <summary>
            Replaces the data of an edge in the collection.
            PUT /_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">Type of the document used for the update.</typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="edgeKey"></param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PutEdgeAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutEdgeQuery)">
            <summary>
            Replaces the data of an edge based on its document ID.
            </summary>
            <typeparam name="T">Type of the document used for the update.</typeparam>
            <param name="graphName">The name of the graph in which to replace the edge.</param>
            <param name="documentId">The document ID of the edge to replace.</param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PutEdgeDefinitionAsync(System.String,System.String,ArangoDBNetStandard.GraphApi.Models.PutEdgeDefinitionBody,ArangoDBNetStandard.GraphApi.Models.PutEdgeDefinitionQuery)">
            <summary>
            Change one specific edge definition.
            This will modify all occurrences of this definition in all graphs known to your database.
            PUT/_api/gharial/{graph}/edge/{definition}
            </summary>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="body"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PatchEdgeAsync``2(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery)">
            <summary>
            Updates the data of the specific edge in the collection.
            PATCH/_api/gharial/{graph}/edge/{collection}/{edge}
            </summary>
            <typeparam name="T">Type of the patch object used to perform a partial update of the edge document.</typeparam>
            <typeparam name="U">Type of the returned edge document,
            when <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnOld"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnNew"/> query params are used.</typeparam>
            <param name="graphName">The name of the graph in which to update the edge.</param>
            <param name="collectionName">The name of the edge collection.</param>
            <param name="edgeKey">The document key of the edge to update.</param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PatchEdgeAsync``2(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery)">
            <summary>
            Updates the data of the specific edge based on its document ID.
            </summary>
            <typeparam name="T">Type of the patch object used to perform a partial update of the edge document.</typeparam>
            <typeparam name="U">Type of the returned edge document,
            when <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnOld"/> or <see cref="P:ArangoDBNetStandard.GraphApi.Models.PatchEdgeQuery.ReturnNew"/> query params are used.</typeparam>
            <param name="graphName">The name of the graph in which to update the edge.</param>
            <param name="documentId">The document ID of the edge to update.</param>
            <param name="edge"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PutVertexAsync``1(System.String,System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutVertexQuery)">
            <summary>
            Replaces the data of a vertex in the collection.
            PUT/_api/gharial/{graph}/vertex/{collection}/{vertex}
            </summary>
            <typeparam name="T"></typeparam>
            <param name="graphName"></param>
            <param name="collectionName"></param>
            <param name="key"></param>
            <param name="vertex"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.GraphApi.IGraphApiClient.PutVertexAsync``1(System.String,System.String,``0,ArangoDBNetStandard.GraphApi.Models.PutVertexQuery)">
            <summary>
            Replaces the data of a vertex based on its document ID.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="graphName">The name of the graph in which to replace the vertex.</param>
            <param name="documentId">The document ID of the vertex to replace.</param>
            <param name="vertex"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1">
            <summary>
            Represents a response containing information about a deleted edge in a graph.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Old">
            <summary>
            The complete deleted edge document.
            Includes all attributes stored before the delete operation.
            Will only be present if <see cref="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeQuery.ReturnOld"/> is true.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Removed">
            <summary>
            Is set to true if the edge was successful removed.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.DeleteEdgeResponse`1.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.EdgeResult">
            <summary>
            Represents the internal attributes of an edge returned in a response.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.GetEdgeQuery">
            <summary>
            Represents query parameters used when fetching an edge in a graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetEdgeQuery.Rev">
            <summary>
            Must contain a revision.
            If this is set, a document is only returned if it has exactly this revision.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.GetEdgeResponse`1">
            <summary>
            Represents a response containing an edge in a graph.
            </summary>
            <typeparam name="T">The type of the edge document.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetEdgeResponse`1.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetEdgeResponse`1.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetEdgeResponse`1.Edge">
            <summary>
            The complete edge.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.GetGraphsResponse">
            <summary>
            Represents a response containing the list of graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetGraphsResponse.Graphs">
            <summary>
            The list of graph.
            Note: The <see cref="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.Name"/> property is null for <see cref="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetGraphsAsync"/> in ArangoDB 4.5.2 and below,
            in which case you can use <see cref="P:ArangoDBNetStandard.GraphApi.Models.GraphResult._key"/> instead.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.GetVertexCollectionsResponse">
            <summary>
            Represents a response containing the list of vertex collections within a graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetVertexCollectionsResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetVertexCollectionsResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GetVertexCollectionsResponse.Collections">
            <summary>
            The list of vertex collections.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.GraphResult">
            <summary>
            Represents graph information returned in the response
            of graph management endpoints.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult._id">
            <summary>
            The internal id value of this graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult._key">
            <summary>
            The key of this graph (corresponding to the name).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult._rev">
            <summary>
            The revision of this graph.
            Can be used to make sure to not override concurrent modifications to this graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.Name">
            <summary>
            The name of the graph.
            Note: This property is null for <see cref="M:ArangoDBNetStandard.GraphApi.GraphApiClient.GetGraphsAsync"/> in ArangoDB 4.5.2 and below,
            in which case you can use <see cref="P:ArangoDBNetStandard.GraphApi.Models.GraphResult._key"/> instead.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.SmartGraphAttribute">
            <summary>
            The name of the sharding attribute in smart graph case (Enterprise Edition only).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.ReplicationFactor">
            <summary>
            The replication factor used for every new collection in the graph (Enterprise Edition only).
            </summary>
            <remarks>
            Returned only in a cluster setup since ArangoDB 3.7,
            as this property is not meaningful in a single server.
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.OrphanCollections">
            <summary>
            A list of additional vertex collections.
            Documents within these collections do not have edges within this graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.NumberOfShards">
            <summary>
            Number of shards created for every new collection in the graph.
            </summary>
            <remarks>
            Returned only in a cluster setup since ArangoDB 3.7,
            as this property is not meaningful in a single server.
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.IsSmart">
            <summary>
            Indicates whether the graph is a SmartGraph (Enterprise Edition only).
            </summary>
            <remarks>
            Returned only in a cluster setup since ArangoDB 3.7,
            as this property is not meaningful in a single server.
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.GraphResult.EdgeDefinitions">
            <summary>
            A list of definitions for the relations of the graph.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionBody">
            <summary>
            Represents a request body to add an edge definition to a graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionBody.To">
            <summary>
            One or many vertex collections that can contain target vertices.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionBody.From">
            <summary>
            One or many vertex collections that can contain source vertices.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionBody.Collection">
            <summary>
            The name of the edge collection to be used.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionResponse">
            <summary>
            Represents a response containing information about the graph
            and its new edge definition.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionResponse.Graph">
            <summary>
            The information about the modified graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeDefinitionResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostEdgeQuery">
            <summary>
            Represents query parameters used when creating a new graph edge.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeQuery.ReturnNew">
            <summary>
            Whether the response should contain the complete new version of the document.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeQuery.WaitForSync">
            <summary>
            Whether the request should wait until synced to disk.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostEdgeResponse`1">
            <summary>
            Represents a response containing information about the created edge in a graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeResponse`1.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeResponse`1.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeResponse`1.Edge">
            <summary>
            The internal attributes for the edge.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeResponse`1.New">
            <summary>
            The complete newly written edge document.
            Includes all written attributes in <typeparamref name="T" /> and all internal attributes generated by ArangoDB.
            Will only be present if <see cref="P:ArangoDBNetStandard.GraphApi.Models.PostEdgeQuery.ReturnNew"/> is true.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostGraphBody">
            <summary>
            Represents a request body to create a named graph.
            </summary>
            <remarks>
            The creation of a graph requires the name of the graph and a definition of its edges.
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphBody.Name">
            <summary>
            Name of the graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphBody.EdgeDefinitions">
            <summary>
            List of definitions for the relations of the graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphBody.OrphanCollections">
            <summary>
            (Optional) List of additional vertex collections.
            Documents within these collections do not have edges within this graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphBody.IsSmart">
            <summary>
            (Optional) Defines if the created graph should be smart (Enterprise Edition only).
            </summary>
            <remarks>
            (cluster only)
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphBody.Options">
            <summary>
            (Optional) Defines options for creating collections within this graph.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostGraphOptions">
            <summary>
            Defines options for creating collections within a graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphOptions.SmartGraphAttribute">
            <summary>
            The attribute name that is used to smartly shard the vertices of a graph.
            It is required if creating a SmartGraph.
            Every vertex in this SmartGraph has to have this attribute.
            Cannot be modified later.
            (Enterprise Edition only).
            </summary>
            <remarks>
            (cluster only)
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphOptions.NumberOfShards">
            <summary>
            The number of shards that is used for every collection within this graph.
            Cannot be modified later.
            </summary>
            <remarks>
            (cluster only)
            </remarks>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphOptions.ReplicationFactor">
            <summary>
            The replication factor used when initially creating collections for this graph
            (Enterprise Edition only).
            </summary>
            <remarks>
            (cluster only)
            </remarks>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostGraphQuery">
            <summary>
            Represents query parameters used when creating a new graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphQuery.WaitForSync">
            <summary>
            Whether the request should wait until synced to disk.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostGraphResponse">
            <summary>
            Represents a response containing information about the newly created graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostGraphResponse.Graph">
            <summary>
            The information about the newly created graph.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionBody">
            <summary>
            Represents a request body to create a new graph vertex collection.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionBody.Collection">
            <summary>
            The name of the vertex collection to create.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionResponse">
            <summary>
            Represents a response containing information about the modified graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionResponse.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionResponse.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostVertexCollectionResponse.Graph">
            <summary>
            The information about the modified graph.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.GraphApi.Models.PostVertexResponse`1.New">
            <summary>
            The complete newly written vertex document. 
            Includes all written attributes in the request 
            body and all internal attributes generated by ArangoDB. 
            Will only be present if 
            <see cref="P:ArangoDBNetStandard.GraphApi.Models.PostVertexQuery.ReturnNew"/> is true.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.AqlFunction">
            <summary>
            AQL user functions management API.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.Auth">
            <summary>
            Auth API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.Cursor">
            <summary>
            Cursor API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.Database">
            <summary>
            Database API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.Document">
            <summary>
            Document API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.Collection">
            <summary>
            Collection API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.Transaction">
            <summary>
            Transaction API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.Graph">
            <summary>
            Graph API
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.IArangoDBClient.User">
            <summary>
            User management API.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.Serialization.ApiClientSerialization">
            <summary>
            The Api client serialization abastract class.
            Used as a base to implement custom serialization.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.Serialization.ApiClientSerialization.DefaultOptions">
            <summary>
            The default serialization options.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.Serialization.ApiClientSerialization.DeserializeFromStream``1(System.IO.Stream)">
            <summary>
            Deserializes the data structure contained by the specified stream
            into an instance of the specified type.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="stream">The stream containing the JSON structure to deserialize.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Serialization.ApiClientSerialization.Serialize``1(``0,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Serializes the specified object to a sequence of bytes,
            following the provided rules for camel case property name and null value handling.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="item">The object to serialize.</param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.Serialization.ApiClientSerializationOptions">
            <summary>
            The API client serialization options class.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.Serialization.ApiClientSerializationOptions.UseCamelCasePropertyNames">
            <summary>
            Use camel case if true, otherwise depends on
            the action will be implemented in the serializer.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.Serialization.ApiClientSerializationOptions.IgnoreNullValues">
            <summary>
            True to ignore null values, otherwise false.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.Serialization.ApiClientSerializationOptions.UseStringEnumConversion">
            <summary>
            True to serialize enums to string values, 
            false to serialize enums to integer values (default).
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.Serialization.ApiClientSerializationOptions.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create serialization options.
            </summary>
            <param name="useCamelCasePropertyNames">Whether property names should be serialized using camelCase.</param>
            <param name="ignoreNullValues">Whether null values should be ignored - i.e. not defined at all in the serialized string.</param>
            <param name="useStringEnumConversion">Whether to serialize enum values to a string value instead of an integer.</param>
        </member>
        <member name="T:ArangoDBNetStandard.Serialization.CamelCasePropertyNamesExceptDictionaryContractResolver">
            <summary>
            Custom  <see cref="T:Newtonsoft.Json.Serialization.IContractResolver"></see> implementation designed for special handling of
            dictionaries where we do not want to camel-case keys or values, nor ignore null values, 
            on serialization.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.Serialization.DictionaryValueConverter">
            <summary>
            Provides special handling for dictionaries where we do not want to camel-case convert 
            nor ignore null values upon serialization.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.Serialization.IApiClientSerialization">
            <summary>
            Defines a serialization layer used for the content in transport.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.Serialization.IApiClientSerialization.DeserializeFromStream``1(System.IO.Stream)">
            <summary>
            Deserializes the data structure contained by the specified stream
            into an instance of the specified type.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="stream">The stream containing the JSON structure to deserialize.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Serialization.IApiClientSerialization.Serialize``1(``0,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            Serializes the specified object to a sequence of bytes,
            following the provided rules for camel case property name and null value handling.
            </summary>
            <typeparam name="T">The type of the object to serialize.</typeparam>
            <param name="item">The object to serialize.</param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.Serialization.JsonNetApiClientSerialization">
            <summary>
            Implements a <see cref="T:ArangoDBNetStandard.Serialization.IApiClientSerialization"/> that uses Json.NET.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.Serialization.JsonNetApiClientSerialization.DeserializeFromStream``1(System.IO.Stream)">
            <summary>
            Deserializes the JSON structure contained by the specified stream
            into an instance of the specified type.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="stream">The stream containing the JSON structure to deserialize.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Serialization.JsonNetApiClientSerialization.Serialize``1(``0,ArangoDBNetStandard.Serialization.ApiClientSerializationOptions)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="item"></param>
            <param name="serializationOptions">The serialization options. When the value is null the
            the serialization options should be provided by the serializer, otherwise the given options should be used.</param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.TransactionApi.ITransactionApiClient">
            <summary>
            Defines a client to access the ArangoDB Transactions API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.TransactionApi.ITransactionApiClient.PostTransactionAsync``1(ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody)">
            <summary>
            POST a transaction to ArangoDB.
            </summary>
            <typeparam name="T">Type to use for deserializing the object returned by the transaction function.</typeparam>
            <param name="body">Object containing information to submit in the POST transaction request.</param>
            <returns>Response from ArangoDB after processing the request.</returns>
        </member>
        <member name="T:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody">
            <summary>
            Represents information required to make a transaction request to ArangoDB.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody.Action">
            <summary>
            JavaScript function describing the transaction action.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody.Collections">
            <summary>
            Collections configuration for the transaction.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody.MaxTransactionSize">
            <summary>
            The maximum transaction size before making intermediate commits (RocksDB only).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody.LockTimeout">
            <summary>
            The maximum time to wait for required locks to be released, before the transaction times out.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody.WaitForSync">
            <summary>
            
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody.Params">
            <summary>
            Parameters to be passed into the transaction JavaScript function defined by <see cref="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody.Action"/>.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.TransactionApi.Models.PostTransactionRequestCollections">
            <summary>
            Represents the collections object passed in an ArangoDB transaction request.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionRequestCollections.Read">
            <summary>
            The list of read-only collections involved in a transaction.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionRequestCollections.Write">
            <summary>
            The list of write collection involved in a transaction.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionRequestCollections.Exclusive">
            <summary>
            Collections for which to obtain exclusive locks during a transaction.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.TransactionApi.Models.PostTransactionResponse`1">
            <summary>
            Response from ArangoDB after executing a transaction.
            </summary>
            <typeparam name="T">Type used to deserialize the returned object from the transaction function.</typeparam>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionResponse`1.Error">
            <summary>
            Whether the request resulted in error.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionResponse`1.Code">
            <summary>
            The ArangoDB result code.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.TransactionApi.Models.PostTransactionResponse`1.Result">
            <summary>
            Deserialized result from the transaction function.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.TransactionApi.TransactionApiClient">
            <summary>
            Provides access to ArangoDB transaction API.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.TransactionApi.TransactionApiClient._client">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.TransactionApi.TransactionApiClient._transactionApiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.TransactionApi.TransactionApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.TransactionApi.TransactionApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ArangoDBNetStandard.TransactionApi.TransactionApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Create an instance of <see cref="T:ArangoDBNetStandard.TransactionApi.TransactionApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="client"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.TransactionApi.TransactionApiClient.PostTransactionAsync``1(ArangoDBNetStandard.TransactionApi.Models.PostTransactionBody)">
            <summary>
            POST a js-transaction to ArangoDB.
            </summary>
            <remarks>
            https://www.arangodb.com/docs/stable/http/transaction-js-transaction.html
            </remarks>
            <typeparam name="T">Type to use for deserializing the object returned by the transaction function.</typeparam>
            <param name="body">Object containing information to submit in the POST transaction request.</param>
            <returns>Response from ArangoDB after processing the request.</returns>
        </member>
        <member name="T:ArangoDBNetStandard.Transport.Http.HttpApiTransport">
            <summary>
            HTTP implementation for <see cref="T:ArangoDBNetStandard.Transport.IApiClientTransport"/>.
            </summary>
            <remarks>
            Uses <see cref="T:System.Net.Http.HttpClient"/> under the hood. Note it is recommended to maintain a single
            instance of <see cref="T:System.Net.Http.HttpClient"/> per server host, for the lifetime of your application, without calling
            <see cref="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.Dispose"/> or using a <c>using</c> block.
            </remarks>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.#ctor(System.Net.Http.HttpClient,ArangoDBNetStandard.Transport.Http.HttpContentType)">
            <summary>
            Create <see cref="T:ArangoDBNetStandard.Transport.Http.HttpApiTransport"/> from an existing <see cref="T:System.Net.Http.HttpClient"/> instance.
            </summary>
            <param name="client">Existing HTTP client instance.</param>
            <param name="contentType">Content type to use in requests.
            Used to set Content-Type and Accept HTTP headers.</param>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.UsingNoAuth(System.Uri,System.String,ArangoDBNetStandard.Transport.Http.HttpContentType)">
            <summary>
            Get an instance of <see cref="T:ArangoDBNetStandard.Transport.Http.HttpApiTransport"/> that uses no authentication.
            </summary>
            <param name="hostUri"></param>
            <param name="dbName"></param>
            <param name="contentType">Content type to use in requests.
            Used to set Content-Type and Accept HTTP headers.
            Uses JSON content type by default.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.UsingBasicAuth(System.Uri,System.String,System.String,System.String,ArangoDBNetStandard.Transport.Http.HttpContentType)">
            <summary>
            Get an instance of <see cref="T:ArangoDBNetStandard.Transport.Http.HttpApiTransport"/> that uses basic auth.
            </summary>
            <param name="hostUri"></param>
            <param name="dbName"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="contentType">Content type to use in requests.
            Used to set Content-Type and Accept HTTP headers.
            Uses JSON content type by default.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.UsingJwtAuth(System.Uri,System.String,System.String,ArangoDBNetStandard.Transport.Http.HttpContentType)">
            <summary>
            Get an instance of <see cref="T:ArangoDBNetStandard.Transport.Http.HttpApiTransport"/> that uses
            JWT-Token authentication.
            </summary>
            <param name="hostUri"></param>
            <param name="dbName"></param>
            <param name="jwtToken"></param>
            <param name="contentType">Content type to use in requests.
            Used to set Content-Type and Accept HTTP headers.
            Uses JSON content type by default.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.UseJsonContentType">
            <summary>
            Make this <see cref="T:ArangoDBNetStandard.Transport.Http.HttpApiTransport"/> instance use JSON content type
            for Content-Type and Accept HTTP headers.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.UseVPackContentType">
            <summary>
            Make this <see cref="T:ArangoDBNetStandard.Transport.Http.HttpApiTransport"/> instance use VPack content type
            for Content-Type and Accept HTTP headers.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.SetBasicAuth(System.String,System.String)">
            <summary>
            When using Basic auth, call this method to set the username and password
            used in requests to ArangoDB.
            </summary>
            <param name="username"></param>
            <param name="password"></param>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.SetJwtToken(System.String)">
            <summary>
            When using JWT authentication, call this method to refresh the JWT token
            used in requests to ArangoDB.
            </summary>
            <param name="jwt"></param>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.DeleteAsync(System.String)">
            <summary>
            Sends a DELETE request using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="requestUri"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.DeleteAsync(System.String,System.Byte[])">
            <summary>
            Send a DELETE request with body content using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="requestUri"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.PostAsync(System.String,System.Byte[])">
            <summary>
            Sends a POST request using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="requestUri"></param>
            <param name="content">The content of the request, must not be null.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.PutAsync(System.String,System.Byte[])">
            <summary>
            Sends a PUT request using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="requestUri"></param>
            <param name="content">The content of the request, must not be null.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.GetAsync(System.String)">
            <summary>
            Sends a GET request using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="requestUri">The content of the request, must not be null.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.PatchAsync(System.String,System.Byte[])">
            <summary>
            Sends a PATCH request using <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <param name="requestUri"></param>
            <param name="content">The content of the request, must not be null.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.HeadAsync(System.String,System.Net.WebHeaderCollection)">
            <summary>
            Send a HEAD request using <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
            <param name="requestUri"></param>
            <param name="webHeaderCollection"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.Http.HttpApiTransport.Dispose">
            <summary>
            Disposes the underlying <see cref="T:System.Net.Http.HttpClient"/> instance.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.Transport.IApiClientTransport">
            <summary>
            A transport layer for communicating with an ArangoDB host.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.IApiClientTransport.PostAsync(System.String,System.Byte[])">
            <summary>
            Send a POST request.
            </summary>
            <param name="requestUri"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.IApiClientTransport.DeleteAsync(System.String)">
            <summary>
            Send a DELETE request.
            </summary>
            <param name="requestUri"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.IApiClientTransport.DeleteAsync(System.String,System.Byte[])">
            <summary>
            Send a DELETE request with body content.
            </summary>
            <param name="requestUri"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.IApiClientTransport.PutAsync(System.String,System.Byte[])">
            <summary>
            Send a PUT request.
            </summary>
            <param name="requestUri"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.IApiClientTransport.GetAsync(System.String)">
            <summary>
            Send a GET request.
            </summary>
            <param name="requestUri"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.IApiClientTransport.PatchAsync(System.String,System.Byte[])">
            <summary>
            Send a PATCH request.
            </summary>
            <param name="requestUri"></param>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.Transport.IApiClientTransport.HeadAsync(System.String,System.Net.WebHeaderCollection)">
            <summary>
            Send a HEAD Request.
            </summary>
            <param name="requestUri"></param>
            <param name="httpRequestHeaders"></param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.IUserApiClient">
            <summary>
            Defines a client to access the ArangoDB User API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.PostUserAsync(ArangoDBNetStandard.UserApi.Models.PostUserBody)">
            <summary>
            Create a new user. You need server access level Administrate
            in order to execute this REST call.
            </summary>
            <param name="body">The request body containing the user information.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.PutUserAsync(System.String,ArangoDBNetStandard.UserApi.Models.PutUserBody)">
            <summary>
            Replace an existing user.
            You need server access level Administrate in order to execute this REST call.
            Additionally, a user can change his/her own data.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="body">The user information used for to replace operation.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.PatchUserAsync(System.String,ArangoDBNetStandard.UserApi.Models.PatchUserBody)">
            <summary>
            Partially update an existing user.
            You need server access level Administrate in order to execute this REST call.
            Additionally, a user can change his/her own data.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="body">The user information used for to replace operation.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.GetUserAsync(System.String)">
            <summary>
            Fetches data about the specified user.
            You can fetch information about yourself or you need the Administrate
            server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.DeleteUserAsync(System.String)">
            <summary>
            Delete a user permanently.
            You need Administrate for the server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.GetUsersAsync">
            <summary>
            Fetches data about all users.
            You need the Administrate server access level in order to execute this REST call.
            Otherwise, you will only get information about yourself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.PutDatabaseAccessLevelAsync(System.String,System.String,ArangoDBNetStandard.UserApi.Models.PutAccessLevelBody)">
            <summary>
            Sets the database access levels of a user for a given database.
            You need the Administrate server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="body">The body of the request containing the access level.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.GetDatabaseAccessLevelAsync(System.String,System.String)">
            <summary>
            Gets specific database access level for a user.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database to query.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.DeleteDatabaseAccessLevelAsync(System.String,System.String)">
            <summary>
            Clears the database access levels of a user for a given database.
            As consequence the default database access level is used.
            If there is no defined default database access level, it defaults to 'No access'.
            You need permission to the '_system' database in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.GetAccessibleDatabasesAsync(System.String,ArangoDBNetStandard.UserApi.Models.GetAccessibleDatabasesQuery)">
            <summary>
            Fetch the list of databases available to the specified user.
            You need Administrate for the server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="query">Optional query parameters for the request.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.PutCollectionAccessLevelAsync(System.String,System.String,System.String,ArangoDBNetStandard.UserApi.Models.PutAccessLevelBody)">
            <summary>
            Sets the collection access levels of a user for a given database.
            You need the Administrate server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="collectionName">The name of the collection.</param>
            <param name="body">The body of the request containing the access level.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.GetCollectionAccessLevelAsync(System.String,System.String,System.String)">
            <summary>
            Gets specific collection access level of a user for a given database.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="collectionName">The name of the collection.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.IUserApiClient.DeleteCollectionAccessLevelAsync(System.String,System.String,System.String)">
            <summary>
            Clears the collection access levels of a user for a given database.
            As consequence the default collection access level is used.
            If there is no defined default database access level, it defaults to 'No access'.
            You need permission to the '_system' database in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="collectionName">The name of the collection.</param>
            <returns></returns>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.AvailableUser">
            <summary>
            Represents information about a user available in ArangoDB.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.AvailableUser.User">
            <summary>
            The name of the user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.AvailableUser.Active">
            <summary>
            Whether the user is active.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.AvailableUser.Extra">
            <summary>
            Object with arbitrary extra data about the user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.DeleteAccessLevelResponse">
            <summary>
            Represents a response returned after clearing
            a database or collection access level.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.DeleteUserResponse">
            <summary>
            Represents a response returned after deleting a user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.GetAccessibleDatabasesQuery">
            <summary>
            Represents query parameters used when fetching the list of databases
            available to a user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.GetAccessibleDatabasesQuery.Full">
            <summary>
            Whether to return the full set of access levels
            for all databases and all collections.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.GetAccessibleDatabasesResponse">
            <summary>
            Represents a response returned after listing
            the databases accesible by a user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.GetAccessibleDatabasesResponse.Result">
            <summary>
            Contains the databases names as keys,
            and the associated privileges for the database as <see cref="T:System.String"/> values.
            In case you specified <see cref="P:ArangoDBNetStandard.UserApi.Models.GetAccessibleDatabasesQuery.Full"/>,
            it will contain <see cref="T:System.Object"/> values with the permissions for the databases
            ('permission') as well as the permissions for the collections ('collections').
            </summary>
            <remarks>
            The type of the full <see cref="T:System.Object"/> values will depend on the serializer used.
            When using the default <see cref="T:ArangoDBNetStandard.Serialization.JsonNetApiClientSerialization"/>,
            values will be <see cref="T:Newtonsoft.Json.Linq.JObject"/>.
            </remarks>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.GetAccessLevelResponse">
            <summary>
            Represents a response returned after fetching
            a database or collection access level.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.GetAccessLevelResponse.Result">
            <summary>
            The access level for the specified database or collection.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.GetUserResponse">
            <summary>
            Represents a response returned after fetching a user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.GetUsersResponse">
            <summary>
            Represents a response returned after fetching all users.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.GetUsersResponse.Result">
            <summary>
            The users that were found.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PatchUserBody">
            <summary>
            Represents a request body to update an existing user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PatchUserBody.Passwd">
            <summary>
            The user password. Specifying a password is mandatory,
            but the empty string is allowed for passwords.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PatchUserBody.Active">
            <summary>
            An optional flag that specifies whether the user is active.
            If not specified, this will default to true.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PatchUserBody.Extra">
            <summary>
            Optional object with arbitrary extra data about the user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PatchUserResponse">
            <summary>
            Represents a response returned after updating an existing user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PostUserBody">
            <summary>
            Represents a request body to create a user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PostUserBody.User">
            <summary>
            The name of the user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PostUserBody.Passwd">
            <summary>
            The user password.
            If no password is specified, the empty string will be used.
            If you pass the special value ARANGODB_DEFAULT_ROOT_PASSWORD,
            then the password will be set the value stored in the environment variable
            ARANGODB_DEFAULT_ROOT_PASSWORD.
            This can be used to pass an instance variable into ArangoDB.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PostUserBody.Active">
            <summary>
            An optional flag that specifies whether the user is active.
            If not specified, this will default to true.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PostUserBody.Extra">
            <summary>
            Optional object with arbitrary extra data about the user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PostUserResponse">
            <summary>
            Represents a response returned after creating a user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PutAccessLevelBody">
            <summary>
            Represents a request body to set database or collection access level.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PutAccessLevelBody.Grant">
            <summary>
            The access level to set.
            Use "rw" to set the collection level access to 'Read/Write'.
            Use "ro" to set the collection level access to 'Read Only'.
            Use "none" to set the collection level access to 'No access'.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PutAccessLevelResponse">
            <summary>
            Represents a response returned after setting
            a database or collection access level.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PutUserBody">
            <summary>
            Represents a request body to replace an existing user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PutUserBody.Passwd">
            <summary>
            The user password. Specifying a password is mandatory,
            but the empty string is allowed for passwords.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PutUserBody.Active">
            <summary>
            An optional flag that specifies whether the user is active.
            If not specified, this will default to true.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.PutUserBody.Extra">
            <summary>
            Optional object with arbitrary extra data about the user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.PutUserResponse">
            <summary>
            Represents a response returned after replacing an existing user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.ResponseBase">
            <summary>
            Represents a common response class for user API operations.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.ResponseBase.Error">
            <summary>
            Indicates whether an error occurred (false in this case).
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.ResponseBase.Code">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.Models.UserResponseBase">
            <summary>
            Represents a common response class with user information
            returned after performing a user operation.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.UserResponseBase.User">
            <summary>
            The name of the user.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.UserResponseBase.Active">
            <summary>
            Whether the user is active.
            </summary>
        </member>
        <member name="P:ArangoDBNetStandard.UserApi.Models.UserResponseBase.Extra">
            <summary>
            Object with arbitrary extra data about the user.
            </summary>
        </member>
        <member name="T:ArangoDBNetStandard.UserApi.UserApiClient">
            <summary>
            A client for interacting with ArangoDB User Management endpoints,
            implementing <see cref="T:ArangoDBNetStandard.UserApi.IUserApiClient"/>.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.UserApi.UserApiClient._client">
            <summary>
            The transport client used to communicate with the ArangoDB host.
            </summary>
        </member>
        <member name="F:ArangoDBNetStandard.UserApi.UserApiClient._userApiPath">
            <summary>
            The root path of the API.
            </summary>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.UserApi.UserApiClient"/>
            using the provided transport layer and the default JSON serialization.
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.#ctor(ArangoDBNetStandard.Transport.IApiClientTransport,ArangoDBNetStandard.Serialization.IApiClientSerialization)">
            <summary>
            Creates an instance of <see cref="T:ArangoDBNetStandard.UserApi.UserApiClient"/>
            using the provided transport and serialization layers.
            </summary>
            <param name="client"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.PostUserAsync(ArangoDBNetStandard.UserApi.Models.PostUserBody)">
            <summary>
            Create a new user. You need server access level Administrate
            in order to execute this REST call.
            </summary>
            <exception cref="T:ArangoDBNetStandard.ApiErrorException">ArangoDB responded with an error.</exception>
            <param name="body">The request body containing the user information.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.PutUserAsync(System.String,ArangoDBNetStandard.UserApi.Models.PutUserBody)">
            <summary>
            Replace an existing user.
            You need server access level Administrate in order to execute this REST call.
            Additionally, a user can change his/her own data.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="body">The user information used for to replace operation.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.PatchUserAsync(System.String,ArangoDBNetStandard.UserApi.Models.PatchUserBody)">
            <summary>
            Partially update an existing user.
            You need server access level Administrate in order to execute this REST call.
            Additionally, a user can change his/her own data.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="body">The user information used for to replace operation.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.GetUserAsync(System.String)">
            <summary>
            Fetches data about the specified user.
            You can fetch information about yourself or you need the Administrate
            server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.DeleteUserAsync(System.String)">
            <summary>
            Delete a user permanently.
            You need Administrate for the server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.GetUsersAsync">
            <summary>
            Fetches data about all users.
            You need the Administrate server access level in order to execute this REST call.
            Otherwise, you will only get information about yourself.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.PutDatabaseAccessLevelAsync(System.String,System.String,ArangoDBNetStandard.UserApi.Models.PutAccessLevelBody)">
            <summary>
            Sets the database access levels of a user for a given database.
            You need the Administrate server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="body">The body of the request containing the access level.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.GetDatabaseAccessLevelAsync(System.String,System.String)">
            <summary>
            Gets specific database access level for a user.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database to query.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.DeleteDatabaseAccessLevelAsync(System.String,System.String)">
            <summary>
            Clears the database access levels of a user for a given database.
            As consequence the default database access level is used.
            If there is no defined default database access level, it defaults to 'No access'.
            You need permission to the '_system' database in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.GetAccessibleDatabasesAsync(System.String,ArangoDBNetStandard.UserApi.Models.GetAccessibleDatabasesQuery)">
            <summary>
            Fetch the list of databases available to the specified user.
            You need Administrate for the server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="query">Optional query parameters for the request.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.PutCollectionAccessLevelAsync(System.String,System.String,System.String,ArangoDBNetStandard.UserApi.Models.PutAccessLevelBody)">
            <summary>
            Sets the collection access levels of a user for a given database.
            You need the Administrate server access level in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="collectionName">The name of the collection.</param>
            <param name="body">The body of the request containing the access level.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.GetCollectionAccessLevelAsync(System.String,System.String,System.String)">
            <summary>
            Gets specific collection access level of a user for a given database.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="collectionName">The name of the collection.</param>
            <returns></returns>
        </member>
        <member name="M:ArangoDBNetStandard.UserApi.UserApiClient.DeleteCollectionAccessLevelAsync(System.String,System.String,System.String)">
            <summary>
            Clears the collection access levels of a user for a given database.
            As consequence the default collection access level is used.
            If there is no defined default database access level, it defaults to 'No access'.
            You need permission to the '_system' database in order to execute this REST call.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="dbName">The name of the database.</param>
            <param name="collectionName">The name of the collection.</param>
            <returns></returns>
        </member>
    </members>
</doc>
